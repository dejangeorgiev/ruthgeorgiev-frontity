(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["page"],{

/***/ "./node_modules/react-instagram-embed/es/index.js":
/*!********************************************************!*\
  !*** ./node_modules/react-instagram-embed/es/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! query-string */ \"./node_modules/react-instagram-embed/node_modules/query-string/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_1__);\nvar __extends=undefined&&undefined.__extends||function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var __assign=undefined&&undefined.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return __assign.apply(this,arguments);};var __rest=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};var InstagramEmbed=/** @class */function(_super){__extends(InstagramEmbed,_super);function InstagramEmbed(props){var _this=_super.call(this,props)||this;_this.request=null;// Public\n_this.cancel=function(){if(_this.request){_this.request.cancel();}};_this.handleFetchSuccess=function(response){if(_this.props.onSuccess){_this.props.onSuccess(response);}_this.setState({html:response.html},function(){window.instgrm.Embeds.process();if(_this.props.onAfterRender){_this.props.onAfterRender();}});};_this.handleFetchFailure=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}clearTimeout(_this.timer);if(_this.props.onFailure){_this.props.onFailure(args);}};_this.createRequestPromise=function(url){var request={};request.promise=new Promise(function(resolve,reject){var promise=fetch(url).then(function(response){return response.json();}).then(function(json){return resolve(json);}).catch(function(err){return reject(err);});request.cancel=function(){return reject(new Error('Cancelled'));};return promise;});return request;};_this.state={html:null};return _this;}InstagramEmbed.prototype.componentDidMount=function(){var _this=this;if(window.instgrm){this.fetchEmbed(this.getQueryParams(this.props));}else{if(this.props.injectScript&&!document.getElementById('react-instagram-embed-script')){this.injectScript();}this.checkAPI().then(function(){_this.fetchEmbed(_this.getQueryParams(_this.props));});}};InstagramEmbed.prototype.componentDidUpdate=function(prevProps){var _a=this.props,url=_a.url,hideCaption=_a.hideCaption,maxWidth=_a.maxWidth,containerTagName=_a.containerTagName;if(prevProps.url!==url||prevProps.hideCaption!==hideCaption||prevProps.maxWidth!==maxWidth||prevProps.containerTagName!==containerTagName){this.request.cancel();this.fetchEmbed(this.getQueryParams(this.props));}};InstagramEmbed.prototype.componentWillUnmount=function(){this.cancel();};InstagramEmbed.prototype.render=function(){var Tag=this.props.containerTagName;return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](Tag,__assign({},this.omitComponentProps(),{dangerouslySetInnerHTML:{__html:this.state.html||''}}));};InstagramEmbed.prototype.fetchEmbed=function(queryParams){this.request=this.createRequestPromise(\"https://graph.facebook.com/v8.0/instagram_oembed/?\"+queryParams);if(this.props.onLoading){this.props.onLoading();}this.request.promise.then(this.handleFetchSuccess).catch(this.handleFetchFailure);};InstagramEmbed.prototype.omitComponentProps=function(){var _a=this.props,url=_a.url,clientAccessToken=_a.clientAccessToken,hideCaption=_a.hideCaption,maxWidth=_a.maxWidth,containerTagName=_a.containerTagName,onLoading=_a.onLoading,onSuccess=_a.onSuccess,onAfterRender=_a.onAfterRender,onFailure=_a.onFailure,protocol=_a.protocol,injectScript=_a.injectScript,rest=__rest(_a,[\"url\",\"clientAccessToken\",\"hideCaption\",\"maxWidth\",\"containerTagName\",\"onLoading\",\"onSuccess\",\"onAfterRender\",\"onFailure\",\"protocol\",\"injectScript\"]);return rest;};InstagramEmbed.prototype.injectScript=function(){var protocolToUse=window.location.protocol.indexOf('file')===0?this.props.protocol:'';var s=document.createElement('script');s.async=s.defer=true;s.src=protocolToUse+\"//platform.instagram.com/en_US/embeds.js\";s.id='react-instagram-embed-script';var body=document.body;if(body){body.appendChild(s);}};InstagramEmbed.prototype.checkAPI=function(){var _this=this;return new Promise(function(resolve){(function checkAPI(self){self.timer=window.setTimeout(function(){if(window.instgrm){clearTimeout(self.timer);resolve();}else{checkAPI(self);}},20);})(_this);});};InstagramEmbed.prototype.getQueryParams=function(_a){var url=_a.url,clientAccessToken=_a.clientAccessToken,hideCaption=_a.hideCaption,maxWidth=_a.maxWidth;return query_string__WEBPACK_IMPORTED_MODULE_1__[\"stringify\"]({url:url,access_token:clientAccessToken,hidecaption:hideCaption,maxwidth:typeof maxWidth==='number'&&maxWidth>=320?maxWidth:undefined,omitscript:true});};InstagramEmbed.defaultProps={hideCaption:false,containerTagName:'div',protocol:'https:',injectScript:true};return InstagramEmbed;}(react__WEBPACK_IMPORTED_MODULE_0__[\"PureComponent\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (InstagramEmbed);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-instagram-embed/es/index.js\n");

/***/ }),

/***/ "./node_modules/react-instagram-embed/node_modules/query-string/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/react-instagram-embed/node_modules/query-string/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var strictUriEncode=__webpack_require__(/*! strict-uri-encode */ \"./node_modules/react-instagram-embed/node_modules/strict-uri-encode/index.js\");var objectAssign=__webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");var decodeComponent=__webpack_require__(/*! decode-uri-component */ \"./node_modules/decode-uri-component/index.js\");function encoderForArrayFormat(opts){switch(opts.arrayFormat){case'index':return function(key,value,index){return value===null?[encode(key,opts),'[',index,']'].join(''):[encode(key,opts),'[',encode(index,opts),']=',encode(value,opts)].join('');};case'bracket':return function(key,value){return value===null?encode(key,opts):[encode(key,opts),'[]=',encode(value,opts)].join('');};default:return function(key,value){return value===null?encode(key,opts):[encode(key,opts),'=',encode(value,opts)].join('');};}}function parserForArrayFormat(opts){var result;switch(opts.arrayFormat){case'index':return function(key,value,accumulator){result=/\\[(\\d*)\\]$/.exec(key);key=key.replace(/\\[\\d*\\]$/,'');if(!result){accumulator[key]=value;return;}if(accumulator[key]===undefined){accumulator[key]={};}accumulator[key][result[1]]=value;};case'bracket':return function(key,value,accumulator){result=/(\\[\\])$/.exec(key);key=key.replace(/\\[\\]$/,'');if(!result){accumulator[key]=value;return;}else if(accumulator[key]===undefined){accumulator[key]=[value];return;}accumulator[key]=[].concat(accumulator[key],value);};default:return function(key,value,accumulator){if(accumulator[key]===undefined){accumulator[key]=value;return;}accumulator[key]=[].concat(accumulator[key],value);};}}function encode(value,opts){if(opts.encode){return opts.strict?strictUriEncode(value):encodeURIComponent(value);}return value;}function keysSorter(input){if(Array.isArray(input)){return input.sort();}else if(typeof input==='object'){return keysSorter(Object.keys(input)).sort(function(a,b){return Number(a)-Number(b);}).map(function(key){return input[key];});}return input;}function extract(str){var queryStart=str.indexOf('?');if(queryStart===-1){return'';}return str.slice(queryStart+1);}function parse(str,opts){opts=objectAssign({arrayFormat:'none'},opts);var formatter=parserForArrayFormat(opts);// Create an object with no prototype\n// https://github.com/sindresorhus/query-string/issues/47\nvar ret=Object.create(null);if(typeof str!=='string'){return ret;}str=str.trim().replace(/^[?#&]/,'');if(!str){return ret;}str.split('&').forEach(function(param){var parts=param.replace(/\\+/g,' ').split('=');// Firefox (pre 40) decodes `%3D` to `=`\n// https://github.com/sindresorhus/query-string/pull/37\nvar key=parts.shift();var val=parts.length>0?parts.join('='):undefined;// missing `=` should be `null`:\n// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\nval=val===undefined?null:decodeComponent(val);formatter(decodeComponent(key),val,ret);});return Object.keys(ret).sort().reduce(function(result,key){var val=ret[key];if(Boolean(val)&&typeof val==='object'&&!Array.isArray(val)){// Sort object keys, not values\nresult[key]=keysSorter(val);}else{result[key]=val;}return result;},Object.create(null));}exports.extract=extract;exports.parse=parse;exports.stringify=function(obj,opts){var defaults={encode:true,strict:true,arrayFormat:'none'};opts=objectAssign(defaults,opts);if(opts.sort===false){opts.sort=function(){};}var formatter=encoderForArrayFormat(opts);return obj?Object.keys(obj).sort(opts.sort).map(function(key){var val=obj[key];if(val===undefined){return'';}if(val===null){return encode(key,opts);}if(Array.isArray(val)){var result=[];val.slice().forEach(function(val2){if(val2===undefined){return;}result.push(formatter(key,val2,result.length));});return result.join('&');}return encode(key,opts)+'='+encode(val,opts);}).filter(function(x){return x.length>0;}).join('&'):'';};exports.parseUrl=function(str,opts){return{url:str.split('?')[0]||'',query:parse(extract(str),opts)};};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-instagram-embed/node_modules/query-string/index.js\n");

/***/ }),

/***/ "./node_modules/react-instagram-embed/node_modules/strict-uri-encode/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/react-instagram-embed/node_modules/strict-uri-encode/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("module.exports=function(str){return encodeURIComponent(str).replace(/[!'()*]/g,function(c){return'%'+c.charCodeAt(0).toString(16).toUpperCase();});};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaW5zdGFncmFtLWVtYmVkL25vZGVfbW9kdWxlcy9zdHJpY3QtdXJpLWVuY29kZS9pbmRleC5qcz9lNmFiIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzdHIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiYyIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIl0sIm1hcHBpbmdzIjoiQUFDQUEsTUFBTSxDQUFDQyxPQUFQLENBQWlCLFNBQVVDLEdBQVYsQ0FBZSxDQUMvQixNQUFPQyxtQkFBa0IsQ0FBQ0QsR0FBRCxDQUFsQixDQUF3QkUsT0FBeEIsQ0FBZ0MsVUFBaEMsQ0FBNEMsU0FBVUMsQ0FBVixDQUFhLENBQy9ELE1BQU8sSUFBTUEsQ0FBQyxDQUFDQyxVQUFGLENBQWEsQ0FBYixFQUFnQkMsUUFBaEIsQ0FBeUIsRUFBekIsRUFBNkJDLFdBQTdCLEVBQWIsQ0FDQSxDQUZNLENBQVAsQ0FHQSxDQUpEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0LWluc3RhZ3JhbS1lbWJlZC9ub2RlX21vZHVsZXMvc3RyaWN0LXVyaS1lbmNvZGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcblx0cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHIpLnJlcGxhY2UoL1shJygpKl0vZywgZnVuY3Rpb24gKGMpIHtcblx0XHRyZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuXHR9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-instagram-embed/node_modules/strict-uri-encode/index.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/global/icons/ExternalLinkIcon.js":
/*!*************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/global/icons/ExternalLinkIcon.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var ExternalLinkIcon=(_ref)=>{var{}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Icon,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"path\",{d:\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"polyline\",{points:\"15 3 21 3 21 9\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"line\",{x1:\"10\",y1:\"14\",x2:\"21\",y2:\"3\"})));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_4__[\"connect\"])(ExternalLinkIcon));var Icon=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e18byv9z0\",label:\"Icon\"})({\"display\":\"inline-block\",\"verticalAlign\":\"bottom\",\"paddingRight\":_tailwindConfig.theme.padding[\"2\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQjBCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7Y29ubmVjdCwgc3R5bGVkfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCB0dyBmcm9tICd0YWlsd2luZC5tYWNybyc7XG5cbmNvbnN0IEV4dGVybmFsTGlua0ljb24gPSAoe30pID0+IHtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxJY29uPlxuICAgICAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgICAgICAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgICAgICAgICAgICAgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlV2lkdGg9XCIyXCIgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTggMTN2NmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY4YTIgMiAwIDAgMSAyLTJoNlwiLz5cbiAgICAgICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPVwiMTUgMyAyMSAzIDIxIDlcIi8+XG4gICAgICAgICAgICAgICAgPGxpbmUgeDE9XCIxMFwiIHkxPVwiMTRcIiB4Mj1cIjIxXCIgeTI9XCIzXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvSWNvbj5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChFeHRlcm5hbExpbmtJY29uKTtcblxuY29uc3QgSWNvbiA9IHN0eWxlZCgnZGl2JylgICR7dHdgaW5saW5lLWJsb2NrIGFsaWduLWJvdHRvbSBwci0yYH1gO1xuIl19 */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvZ2xvYmFsL2ljb25zL0V4dGVybmFsTGlua0ljb24uanM/YzNiOCJdLCJuYW1lcyI6WyJFeHRlcm5hbExpbmtJY29uIiwiY29ubmVjdCIsIkljb24iLCJfdGFpbHdpbmRDb25maWciLCJ0aGVtZSIsInBhZGRpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O2lLQUlBLEdBQU1BLGlCQUFnQixDQUFHLFFBQVEsSUFBUCxFQUFPLE1BRTdCLE1BQ0ksMkRBQUMsSUFBRCxNQUNJLGlFQUFLLEtBQUssQ0FBQyw0QkFBWCxDQUF3QyxLQUFLLENBQUMsSUFBOUMsQ0FBbUQsTUFBTSxDQUFDLElBQTFELENBQStELE9BQU8sQ0FBQyxXQUF2RSxDQUNLLElBQUksQ0FBQyxNQURWLENBRUssTUFBTSxDQUFDLGNBRlosQ0FFMkIsV0FBVyxDQUFDLEdBRnZDLENBRTJDLGFBQWEsQ0FBQyxPQUZ6RCxDQUVpRSxjQUFjLENBQUMsT0FGaEYsRUFHSSxrRUFBTSxDQUFDLENBQUMsMERBQVIsRUFISixDQUlJLHNFQUFVLE1BQU0sQ0FBQyxnQkFBakIsRUFKSixDQUtJLGtFQUFNLEVBQUUsQ0FBQyxJQUFULENBQWMsRUFBRSxDQUFDLElBQWpCLENBQXNCLEVBQUUsQ0FBQyxJQUF6QixDQUE4QixFQUFFLENBQUMsR0FBakMsRUFMSixDQURKLENBREosQ0FXSCxDQWJELENBZWVDLHVIQUFPLENBQUNELGdCQUFELENBQXRCLEVBRUEsR0FBTUUsS0FBSSxDQUFHLGtGQUFPLEtBQVAsbUNBQUgsQ0FBc0Isa0VBckJoQ0MsZUFBZSxDQUFDQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEIsR0FBOUIsQ0FxQmdDLENBQXRCLGdrREFBViIsImZpbGUiOiIuL3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7Y29ubmVjdCwgc3R5bGVkfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCB0dyBmcm9tICd0YWlsd2luZC5tYWNybyc7XG5cbmNvbnN0IEV4dGVybmFsTGlua0ljb24gPSAoe30pID0+IHtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxJY29uPlxuICAgICAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgICAgICAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgICAgICAgICAgICAgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlV2lkdGg9XCIyXCIgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTggMTN2NmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY4YTIgMiAwIDAgMSAyLTJoNlwiLz5cbiAgICAgICAgICAgICAgICA8cG9seWxpbmUgcG9pbnRzPVwiMTUgMyAyMSAzIDIxIDlcIi8+XG4gICAgICAgICAgICAgICAgPGxpbmUgeDE9XCIxMFwiIHkxPVwiMTRcIiB4Mj1cIjIxXCIgeTI9XCIzXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvSWNvbj5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChFeHRlcm5hbExpbmtJY29uKTtcblxuY29uc3QgSWNvbiA9IHN0eWxlZCgnZGl2JylgICR7dHdgaW5saW5lLWJsb2NrIGFsaWduLWJvdHRvbSBwci0yYH1gO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/global/icons/ExternalLinkIcon.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/Card.js":
/*!*****************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/Card.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _global_icons_ExternalLinkIcon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../global/icons/ExternalLinkIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/ExternalLinkIcon.js\");\n/* harmony import */ var _post_featured_media__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../post/featured-media */ \"./packages/twentytwenty-theme/src/components/post/featured-media.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var Card=(_ref)=>{var{state,actions,libraries,name,description,highlightedText,imageID,url}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Container,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(CardImageContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(CardImage,{id:imageID})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(CardContents,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(ContentBadge,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_global_icons_ExternalLinkIcon__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null),highlightedText),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(BadgeTitle,{href:url},name),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(BadgeDescription,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:description}))))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Card));var Container=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eggfpq60\",label:\"Container\"})({[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"display\":\"flex\"},\"boxShadow\":_tailwindConfig.theme.boxShadow[\"md\"],\"position\":\"relative\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0QrQiIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var CardImageContainer=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eggfpq61\",label:\"CardImageContainer\"})({[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"flex\":_tailwindConfig.theme.flex[\"shrink-0\"]}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUR3QyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var CardImage=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_post_featured_media__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{target:\"eggfpq62\",label:\"CardImage\"})({\"borderRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"borderTopRightRadius\":_tailwindConfig.theme.borderRadius[\"none\"],\"borderBottomRightRadius\":_tailwindConfig.theme.borderRadius[\"none\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"maxWidth\":_tailwindConfig.theme.maxWidth[\"xl\"]}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0R1QyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var CardContents=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eggfpq63\",label:\"CardContents\"})({\"textAlign\":\"left\",\"marginTop\":_tailwindConfig.theme.margin[\"4\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"marginLeft\":_tailwindConfig.theme.margin[\"6\"]},\"paddingLeft\":_tailwindConfig.theme.padding[\"5\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdURrQyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var ContentBadge=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eggfpq64\",label:\"ContentBadge\"})(Object.assign({\"textTransform\":\"uppercase\",\"letterSpacing\":_tailwindConfig.theme.letterSpacing[\"wide\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-500\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"bold\"),{\"display\":\"inline-block\",\"paddingTop\":_tailwindConfig.theme.padding[\"5\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0RrQyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var BadgeTitle=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h5',{target:\"eggfpq65\",label:\"BadgeTitle\"})(Object.assign({\"display\":\"block\",\"marginTop\":_tailwindConfig.theme.margin[\"1\"],\"lineHeight\":_tailwindConfig.theme.lineHeight[\"tight\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"normal\"),{\"paddingTop\":_tailwindConfig.theme.padding[\"3\"],\"marginBottom\":_tailwindConfig.theme.margin[\"0\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-900\"),{\":hover\":{\"textDecoration\":\"underline\"}}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUQrQiIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var BadgeDescription=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('p',{target:\"eggfpq66\",label:\"BadgeDescription\"})(Object.assign({\"marginTop\":_tailwindConfig.theme.margin[\"2\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-600\"),{\"paddingRight\":_tailwindConfig.theme.padding[\"6\"],\"paddingTop\":_tailwindConfig.theme.padding[\"3\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"3\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERvQyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\");var CardBadgeLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('a',{target:\"eggfpq67\",label:\"CardBadgeLink\"})( false?undefined:{name:\"g65o95\",styles:\"text-decoration:none\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0NhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkRpQyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9DYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcbmltcG9ydCBFeHRlcm5hbExpbmtJY29uIGZyb20gXCIuLi8uLi8uLi9nbG9iYWwvaWNvbnMvRXh0ZXJuYWxMaW5rSWNvblwiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uLy4uLy4uL3Bvc3QvZmVhdHVyZWQtbWVkaWFcIjtcblxuY29uc3QgQ2FyZCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgbmFtZSwgZGVzY3JpcHRpb24sIGhpZ2hsaWdodGVkVGV4dCwgaW1hZ2VJRCwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2VDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkSW1hZ2UgaWQ9e2ltYWdlSUR9Lz5cbiAgICAgICAgICAgICAgICA8L0NhcmRJbWFnZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnRzPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGVudEJhZGdlPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVybmFsTGlua0ljb24vPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hpZ2hsaWdodGVkVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50QmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgIDxCYWRnZVRpdGxlIGhyZWY9e3VybH0+e25hbWV9PC9CYWRnZVRpdGxlPlxuICAgICAgICAgICAgICAgICAgICA8QmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e2Rlc2NyaXB0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvQmFkZ2VEZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICA8L0NhcmRDb250ZW50cz5cbiAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQ2FyZCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtZDpmbGV4IHNoYWRvdy1tZCByZWxhdGl2ZWB9YDtcbmNvbnN0IENhcmRJbWFnZUNvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbWQ6ZmxleC1zaHJpbmstMGB9YDtcbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWAgJHt0d2Byb3VuZGVkLWxnIHJvdW5kZWQtci1ub25lIG1kOm1heC13LXhsYH1gO1xuY29uc3QgQ2FyZENvbnRlbnRzID0gc3R5bGVkKCdkaXYnKWAke3R3YHRleHQtbGVmdCBtdC00IG1kOm1sLTYgcGwtNWB9YDtcbmNvbnN0IENvbnRlbnRCYWRnZSA9IHN0eWxlZCgnZGl2JylgJHt0d2B1cHBlcmNhc2UgdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNTAwIGZvbnQtYm9sZCBpbmxpbmUtYmxvY2sgcHQtNWB9YDtcbmNvbnN0IEJhZGdlVGl0bGUgPSBzdHlsZWQoJ2g1JylgJHt0d2BibG9jayBtdC0xIGxlYWRpbmctdGlnaHQgZm9udC1ub3JtYWwgcHQtMyBtYi0wIHRleHQtZ3JheS05MDAgaG92ZXI6dW5kZXJsaW5lYH1gO1xuY29uc3QgQmFkZ2VEZXNjcmlwdGlvbiA9IHN0eWxlZCgncCcpYCR7dHdgbXQtMiB0ZXh0LWdyYXktNjAwIHByLTYgcHktM2B9YDtcblxuXG5jb25zdCBDYXJkQmFkZ2VMaW5rID0gc3R5bGVkKCdhJylgXG50ZXh0LWRlY29yYXRpb246bm9uZVxuYDtcblxuXG5cblxuXG5cbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/Card.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/Carousel/PageCarousel.js":
/*!**********************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/Carousel/PageCarousel.js ***!
  \**********************************************************************************************/
/*! exports provided: default, arrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arrow\", function() { return arrow; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_elastic_carousel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-elastic-carousel */ \"./node_modules/react-elastic-carousel/dist/index.es.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var PageCarousel=(_ref)=>{var{state,actions,libraries,id,carousel}=_ref;var[loading,setLoading]=Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(true);/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);setLoading(false);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;var CarouselBreakpoints=[{width:1,itemsToShow:1,itemsToScroll:1},{width:550,itemsToShow:1,itemsToScroll:1},{width:850,itemsToShow:1,itemsToScroll:1},{width:1150,itemsToShow:1,itemsToScroll:1},{width:1450,itemsToShow:1,itemsToScroll:1},{width:1750,itemsToShow:1,itemsToScroll:1}];return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(CarouselContainer,null,loading&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"div\",null,\"Loading...\"),!loading&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(PageElasticCarousel,{renderArrow:arrow,breakPoints:CarouselBreakpoints,focusOnSelect:false,itemsToShow:1,itemsToScroll:5,pagination:false,showArrows:true,enableSwipe:true,enableMouseSwipe:true,preventDefaultTouchmoveEvent:false,autoPlaySpeed:8000,easing:\"cubic-bezier(1,.15,.55,1.54)\",tiltEasing:\"cubic-bezier(0.110, 1, 1.000, 0.210)\",transitionMs:700,enableTilt:true},Object.keys(carousel).map((item,i)=>{var CarouselTitle=carousel[item]['contentfieldgroup.content.carousel.item.title'];var CarouselText=carousel[item]['contentfieldgroup.content.carousel.item.text'];var ImageData=carousel[item]['contentfieldgroup.content.carousel.item.image'];var ImageId=ImageData.id;var ImageAlt=ImageData.alt;var ImageSize=ImageData.sizes;var ImageSizeMedium=ImageSize['medium'];var CarouselLink=carousel[item]['contentfieldgroup.content.carousel.item.link'];var CarouselLinkTarget=CarouselLink.target;var CarouselLinkUrl=CarouselLink.url;var CarouselLinkTitle=CarouselLink.title;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(FirstDiv,{key:i},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(SecondDiv,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Image,{src:ImageSizeMedium,alt:ImageAlt}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(ThirdDiv,null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(FifthDiv,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(SixthDiv,null,CarouselTitle&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(CarouselTitleH1,null,CarouselTitle),CarouselText&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(Description,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(DescriptionSpan,null,CarouselText)),CarouselLink&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(DescriptionLink,{href:CarouselLinkUrl,target:CarouselLinkTarget},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"span\",null,CarouselLinkTitle),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(DescriptionLinkSpan,null,\"\\u279C\"))),CarouselLink&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(FifthDivSvg,{viewBox:\"0 0 100 100\",preserveAspectRatio:\"none\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(\"polygon\",{points:\"50,0 100,0 50,100 0,100\"}))));}))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(PageCarousel));function arrow(_ref2){var{type,onClick,isEdge}=_ref2;return type===react_elastic_carousel__WEBPACK_IMPORTED_MODULE_5__[\"consts\"].PREV?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(ButtonLeft,{onClick:onClick,disabled:isEdge},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(ButtonLeftSpan,null,\"\\u279C\")):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(ButtonRight,{onClick:onClick,disabled:isEdge},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_6__[\"jsx\"])(ButtonRightSpan,null,\"\\u279C\"));}var CarouselContainer=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v0\",label:\"CarouselContainer\"})({\"margin\":_tailwindConfig.theme.margin[\"10\"],\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"sm\")]:Object.assign({\"padding\":_tailwindConfig.theme.padding[\"24\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"gray-200\")),[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"padding\":_tailwindConfig.theme.padding[\"48\"]}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var FirstDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v1\",label:\"FirstDiv\"})(\"max-height:40rem;@media (max-width:768px){min-height:30rem;max-height:90rem;}\",{\"width\":_tailwindConfig.theme.width[\"full\"],\"height\":_tailwindConfig.theme.height[\"full\"],\"position\":\"relative\",\"borderRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"display\":\"block\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"display\":\"flex\"},\"alignItems\":\"center\",\"boxShadow\":_tailwindConfig.theme.boxShadow[\"xl\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0Nhcm91c2VsL1BhZ2VDYXJvdXNlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwSThCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0Nhcm91c2VsL1BhZ2VDYXJvdXNlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0YWlsd2luZC5tYWNyb1wiO1xuaW1wb3J0IENhcm91c2VsLCB7Y29uc3RzfSBmcm9tICdyZWFjdC1lbGFzdGljLWNhcm91c2VsJ1xuXG5cbmNvbnN0IFBhZ2VDYXJvdXNlbCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgaWQsIGNhcm91c2VsfSkgPT4ge1xuXG4gICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuXG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgICBjb25zdCBDYXJvdXNlbEJyZWFrcG9pbnRzID0gW1xuICAgICAgICB7d2lkdGg6IDEsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiA1NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiA4NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiAxMTUwLCBpdGVtc1RvU2hvdzogMSwgaXRlbXNUb1Njcm9sbDogMX0sXG4gICAgICAgIHt3aWR0aDogMTQ1MCwgaXRlbXNUb1Nob3c6IDEsIGl0ZW1zVG9TY3JvbGw6IDF9LFxuICAgICAgICB7d2lkdGg6IDE3NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICBdO1xuXG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcblxuICAgICAgICA8Q2Fyb3VzZWxDb250YWluZXI+XG4gICAgICAgICAgICB7bG9hZGluZyAmJiAoPGRpdj5Mb2FkaW5nLi4uPC9kaXY+KX1cbiAgICAgICAgICAgIHshbG9hZGluZyAmJiAoXG4gICAgICAgICAgICA8UGFnZUVsYXN0aWNDYXJvdXNlbFxuICAgICAgICAgICAgICAgIHJlbmRlckFycm93PXthcnJvd31cbiAgICAgICAgICAgICAgICBicmVha1BvaW50cz17Q2Fyb3VzZWxCcmVha3BvaW50c31cbiAgICAgICAgICAgICAgICBmb2N1c09uU2VsZWN0PXtmYWxzZX1cbiAgICAgICAgICAgICAgICBpdGVtc1RvU2hvdz17MX1cbiAgICAgICAgICAgICAgICBpdGVtc1RvU2Nyb2xsPXs1fVxuICAgICAgICAgICAgICAgIHBhZ2luYXRpb249e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHNob3dBcnJvd3M9e3RydWV9XG4gICAgICAgICAgICAgICAgZW5hYmxlU3dpcGU9e3RydWV9XG4gICAgICAgICAgICAgICAgZW5hYmxlTW91c2VTd2lwZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFRvdWNobW92ZUV2ZW50PXtmYWxzZX1cbiAgICAgICAgICAgICAgICBhdXRvUGxheVNwZWVkPXs4MDAwfVxuICAgICAgICAgICAgICAgIGVhc2luZz1cImN1YmljLWJlemllcigxLC4xNSwuNTUsMS41NClcIlxuICAgICAgICAgICAgICAgIHRpbHRFYXNpbmc9XCJjdWJpYy1iZXppZXIoMC4xMTAsIDEsIDEuMDAwLCAwLjIxMClcIlxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25Ncz17NzAwfVxuICAgICAgICAgICAgICAgIGVuYWJsZVRpbHQ9e3RydWV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhjYXJvdXNlbCkubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxUaXRsZSA9IGNhcm91c2VsW2l0ZW1dWydjb250ZW50ZmllbGRncm91cC5jb250ZW50LmNhcm91c2VsLml0ZW0udGl0bGUnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBDYXJvdXNlbFRleHQgPSBjYXJvdXNlbFtpdGVtXVsnY29udGVudGZpZWxkZ3JvdXAuY29udGVudC5jYXJvdXNlbC5pdGVtLnRleHQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBJbWFnZURhdGEgPSBjYXJvdXNlbFtpdGVtXVsnY29udGVudGZpZWxkZ3JvdXAuY29udGVudC5jYXJvdXNlbC5pdGVtLmltYWdlJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgSW1hZ2VJZCA9IEltYWdlRGF0YS5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBJbWFnZUFsdCA9IEltYWdlRGF0YS5hbHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgSW1hZ2VTaXplID0gSW1hZ2VEYXRhLnNpemVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IEltYWdlU2l6ZU1lZGl1bSA9IEltYWdlU2l6ZVsnbWVkaXVtJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxMaW5rID0gY2Fyb3VzZWxbaXRlbV1bJ2NvbnRlbnRmaWVsZGdyb3VwLmNvbnRlbnQuY2Fyb3VzZWwuaXRlbS5saW5rJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxMaW5rVGFyZ2V0ID0gQ2Fyb3VzZWxMaW5rLnRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBDYXJvdXNlbExpbmtVcmwgPSBDYXJvdXNlbExpbmsudXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IENhcm91c2VsTGlua1RpdGxlID0gQ2Fyb3VzZWxMaW5rLnRpdGxlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxGaXJzdERpdiBrZXk9e2l9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2Vjb25kRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXtJbWFnZVNpemVNZWRpdW19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PXtJbWFnZUFsdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGhpcmREaXYvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NlY29uZERpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZpZnRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNpeHRoRGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge0Nhcm91c2VsVGl0bGUgJiYgPENhcm91c2VsVGl0bGVIMT57Q2Fyb3VzZWxUaXRsZX08L0Nhcm91c2VsVGl0bGVIMT59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcm91c2VsVGV4dCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb25TcGFuPntDYXJvdXNlbFRleHR9PC9EZXNjcmlwdGlvblNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXJvdXNlbExpbmsgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uTGlua1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj17Q2Fyb3VzZWxMaW5rVXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PXtDYXJvdXNlbExpbmtUYXJnZXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntDYXJvdXNlbExpbmtUaXRsZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb25MaW5rU3Bhbj4mI3gyNzljOzwvRGVzY3JpcHRpb25MaW5rU3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9EZXNjcmlwdGlvbkxpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NpeHRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcm91c2VsTGluayAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGaWZ0aERpdlN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwibm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCI1MCwwIDEwMCwwIDUwLDEwMCAwLDEwMFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZpZnRoRGl2U3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZpZnRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRmlyc3REaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L1BhZ2VFbGFzdGljQ2Fyb3VzZWw+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L0Nhcm91c2VsQ29udGFpbmVyPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQYWdlQ2Fyb3VzZWwpO1xuXG5leHBvcnQgZnVuY3Rpb24gYXJyb3coe3R5cGUsIG9uQ2xpY2ssIGlzRWRnZX0pIHtcbiAgICByZXR1cm4gdHlwZSA9PT0gY29uc3RzLlBSRVYgPyAoXG4gICAgICAgIDxCdXR0b25MZWZ0IG9uQ2xpY2s9e29uQ2xpY2t9IGRpc2FibGVkPXtpc0VkZ2V9PlxuICAgICAgICAgICAgPEJ1dHRvbkxlZnRTcGFuPiYjeDI3OWM7PC9CdXR0b25MZWZ0U3Bhbj5cbiAgICAgICAgPC9CdXR0b25MZWZ0PlxuICAgICkgOiA8QnV0dG9uUmlnaHQgb25DbGljaz17b25DbGlja30gZGlzYWJsZWQ9e2lzRWRnZX0+XG4gICAgICAgIDxCdXR0b25SaWdodFNwYW4+JiN4Mjc5Yzs8L0J1dHRvblJpZ2h0U3Bhbj5cbiAgICA8L0J1dHRvblJpZ2h0PlxufVxuXG5jb25zdCBDYXJvdXNlbENvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbS0xMCBteC1hdXRvIHNtOnAtMTYgc206cC0yNCBsZzpwLTQ4IHNtOmJnLWdyYXktMjAwYH1gO1xuXG5jb25zdCBGaXJzdERpdiA9IHN0eWxlZCgnZGl2JylgIFxuICAgIG1heC1oZWlnaHQ6NDByZW07IFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgbWluLWhlaWdodDogMzByZW07IFxuICAgICAgICAgICAgbWF4LWhlaWdodDogOTByZW07IFxuICAgIH1cbiAgICBcbiAgICAke3R3YHctZnVsbCBoLWZ1bGwgcmVsYXRpdmUgcm91bmRlZC1sZyBibG9jayBtZDpmbGV4IGl0ZW1zLWNlbnRlciBzaGFkb3cteGxgfWA7XG5cbmNvbnN0IFNlY29uZERpdiA9IHN0eWxlZCgnZGl2JylgIFxuICAgIG1pbi1oZWlnaHQ6IDMwcmVtOyBcbiAgICBtYXgtaGVpZ2h0OjQwcmVtOyBcbiAgICBoZWlnaHQ6MzhyZW07IFxuICAgICR7dHdgcmVsYXRpdmUgdy1mdWxsIG1kOnctMi81IG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLXQtbGcgbWQ6cm91bmRlZC10LW5vbmUgbWQ6cm91bmRlZC1sLWxnYH1gO1xuXG5jb25zdCBJbWFnZSA9IHN0eWxlZCgnaW1nJylgICR7dHdgYWJzb2x1dGUgaW5zZXQtMCB3LWZ1bGwgaC1mdWxsIG9iamVjdC1jb3ZlciBvYmplY3QtY2VudGVyYH1gO1xuXG5jb25zdCBUaGlyZERpdiA9IHN0eWxlZCgnZGl2JylgICR7dHdgYWJzb2x1dGUgaW5zZXQtMCB3LWZ1bGwgaC1mdWxsIGJnLXllbGxvdy0xMDAgb3BhY2l0eS0yNWB9YDtcblxuY29uc3QgRm91cnRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BhYnNvbHV0ZSBpbnNldC0wIHctZnVsbCBoLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZmlsbC1jdXJyZW50IHRleHQtd2hpdGVgfWA7XG5cbmNvbnN0IEZpZnRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2B3LWZ1bGwgbWQ6dy0zLzUgaC1mdWxsIGJnLWdyYXktMTAwIG1kOmJnLXRyYW5zcGFyZW50IGZsZXggaXRlbXMtY2VudGVyIHJvdW5kZWQtbGdgfWA7XG5cbmNvbnN0IFNpeHRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BwLTYgbWQ6cHItMjQgbWQ6cGwtMTYgbWQ6cHktMTJgfWA7XG5cbmNvbnN0IERlc2NyaXB0aW9uID0gc3R5bGVkKCdwJylgICR7dHdgdGV4dC1ncmF5LTYwMGB9YDtcblxuY29uc3QgRGVzY3JpcHRpb25TcGFuID0gc3R5bGVkKCdzcGFuJylgICR7dHdgdGV4dC1ncmF5LTkwMGB9YDtcblxuY29uc3QgRGVzY3JpcHRpb25MaW5rID0gc3R5bGVkKCdhJylgICR7dHdgZmxleCBpdGVtcy1iYXNlbGluZSBtdC0zIHRleHQtaW5kaWdvLTYwMCBob3Zlcjp0ZXh0LWluZGlnby05MDAgZm9jdXM6dGV4dC1pbmRpZ28tOTAwYH1gO1xuXG5jb25zdCBEZXNjcmlwdGlvbkxpbmtTcGFuID0gc3R5bGVkKCdzcGFuJylgICR7dHdgdGV4dC14cyBtbC0xYH1gO1xuXG5jb25zdCBGb3VydGhEaXZIMiA9IHN0eWxlZCgnaDInKWAgJHt0d2B3LWZ1bGwgaC0yNCB0ZXh0LWNlbnRlcmB9YDtcblxuY29uc3QgQ2Fyb3VzZWxUaXRsZUgxID0gc3R5bGVkKCdoMScpYCAke3R3YHctZnVsbCBteS0xIHNtOm15LTIgaC0zNiB0ZXh0LWxlZnRgfWA7XG5cbmNvbnN0IEZpZnRoRGl2U3ZnID0gc3R5bGVkKCdzdmcnKWAgJHt0d2BoaWRkZW4gbWQ6YmxvY2sgYWJzb2x1dGUgaW5zZXQteS0wIGgtZnVsbCB3LTI0IGZpbGwtY3VycmVudCB0ZXh0LWdyYXktMTAwIC1tbC0xMmB9YDtcblxuY29uc3QgQnV0dG9uTGVmdCA9IHN0eWxlZCgnYnV0dG9uJylgIHRyYW5zZm9ybTogc2NhbGUoLTEpOyAke3R3YHNlbGYtY2VudGVyIHotMTAgLW1yLTggYmctd2hpdGUgaG92ZXI6YmctZ3JheS05MDAgcm91bmRlZC1mdWxsIHNoYWRvdy0yeGwgaC0xNiB3LTE2IHRleHQtMnhsIHRleHQtaW5kaWdvLTYwMCBob3Zlcjp0ZXh0LWluZGlnby00MDAgZm9jdXM6dGV4dC1pbmRpZ28tNDAwIC1tbC02IGN1cnNvci1wb2ludGVyIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpzaGFkb3ctb3V0bGluZWB9YDtcblxuY29uc3QgQnV0dG9uTGVmdFNwYW4gPSBzdHlsZWQoJ3NwYW4nKWAgJHt0d2BibG9jayB0ZXh0LTN4bCBweC00YH1gO1xuXG5jb25zdCBCdXR0b25SaWdodCA9IHN0eWxlZCgnYnV0dG9uJylgICR7dHdgc2VsZi1jZW50ZXIgei0xMCAtbWwtOCBiZy13aGl0ZSByb3VuZGVkLWZ1bGwgc2hhZG93LTJ4bCBob3ZlcjpiZy1ncmF5LTkwMCBoLTE2IHctMTYgdGV4dC0yeGwgdGV4dC1pbmRpZ28tNjAwIGhvdmVyOnRleHQtaW5kaWdvLTQwMCBmb2N1czp0ZXh0LWluZGlnby00MDAgLW1yLTYgZm9jdXM6b3V0bGluZS1ub25lIGN1cnNvci1wb2ludGVyIGZvY3VzOnNoYWRvdy1vdXRsaW5lYH1gO1xuXG5jb25zdCBCdXR0b25SaWdodFNwYW4gPSBzdHlsZWQoJ3NwYW4nKWAgJHt0d2BibG9jayB0ZXh0LTN4bCBweC00YH1gO1xuXG5jb25zdCBQYWdlRWxhc3RpY0Nhcm91c2VsID0gc3R5bGVkKENhcm91c2VsKWAgXG4gICAgb3V0bGluZTpub25lOyBcbiAgICBtYXgtaGVpZ2h0OjMzMHB4O1xuICAgIFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgbWF4LWhlaWdodDoxMDAwcHg7IFxuICB9XG4ke3R3YGB9YDsiXX0= */\");var SecondDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v2\",label:\"SecondDiv\"})(\"min-height:30rem;max-height:40rem;height:38rem;\",{\"position\":\"relative\",\"width\":_tailwindConfig.theme.width[\"full\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"width\":_tailwindConfig.theme.width[\"2/5\"],\"borderTopLeftRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"borderTopRightRadius\":_tailwindConfig.theme.borderRadius[\"none\"],\"borderBottomLeftRadius\":_tailwindConfig.theme.borderRadius[\"lg\"]},\"overflow\":\"hidden\",\"borderTopLeftRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"borderTopRightRadius\":_tailwindConfig.theme.borderRadius[\"lg\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Image=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('img',{target:\"e1da3q7v3\",label:\"Image\"})({\"position\":\"absolute\",\"top\":_tailwindConfig.theme.inset[\"0\"],\"right\":_tailwindConfig.theme.inset[\"0\"],\"bottom\":_tailwindConfig.theme.inset[\"0\"],\"left\":_tailwindConfig.theme.inset[\"0\"],\"width\":_tailwindConfig.theme.width[\"full\"],\"height\":_tailwindConfig.theme.height[\"full\"],\"objectFit\":\"cover\",\"objectPosition\":_tailwindConfig.theme.objectPosition[\"center\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ThirdDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v4\",label:\"ThirdDiv\"})(Object.assign({\"position\":\"absolute\",\"top\":_tailwindConfig.theme.inset[\"0\"],\"right\":_tailwindConfig.theme.inset[\"0\"],\"bottom\":_tailwindConfig.theme.inset[\"0\"],\"left\":_tailwindConfig.theme.inset[\"0\"],\"width\":_tailwindConfig.theme.width[\"full\"],\"height\":_tailwindConfig.theme.height[\"full\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"yellow-100\"),{\"opacity\":_tailwindConfig.theme.opacity[\"25\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var FourthDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v5\",label:\"FourthDiv\"})(Object.assign({\"position\":\"absolute\",\"top\":_tailwindConfig.theme.inset[\"0\"],\"right\":_tailwindConfig.theme.inset[\"0\"],\"bottom\":_tailwindConfig.theme.inset[\"0\"],\"left\":_tailwindConfig.theme.inset[\"0\"],\"width\":_tailwindConfig.theme.width[\"full\"],\"height\":_tailwindConfig.theme.height[\"full\"],\"display\":\"flex\",\"alignItems\":\"center\",\"justifyContent\":\"center\",\"fill\":_tailwindConfig.theme.fill[\"current\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"white\")), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var FifthDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v6\",label:\"FifthDiv\"})(Object.assign({\"width\":_tailwindConfig.theme.width[\"full\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:Object.assign({\"width\":_tailwindConfig.theme.width[\"3/5\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"transparent\")),\"height\":_tailwindConfig.theme.height[\"full\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"gray-100\"),{\"display\":\"flex\",\"alignItems\":\"center\",\"borderRadius\":_tailwindConfig.theme.borderRadius[\"lg\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var SixthDiv=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1da3q7v7\",label:\"SixthDiv\"})({\"padding\":_tailwindConfig.theme.padding[\"6\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"paddingRight\":_tailwindConfig.theme.padding[\"24\"],\"paddingLeft\":_tailwindConfig.theme.padding[\"16\"],\"paddingTop\":_tailwindConfig.theme.padding[\"12\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"12\"]}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0Nhcm91c2VsL1BhZ2VDYXJvdXNlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSzhCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0Nhcm91c2VsL1BhZ2VDYXJvdXNlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0YWlsd2luZC5tYWNyb1wiO1xuaW1wb3J0IENhcm91c2VsLCB7Y29uc3RzfSBmcm9tICdyZWFjdC1lbGFzdGljLWNhcm91c2VsJ1xuXG5cbmNvbnN0IFBhZ2VDYXJvdXNlbCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgaWQsIGNhcm91c2VsfSkgPT4ge1xuXG4gICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuXG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgICBjb25zdCBDYXJvdXNlbEJyZWFrcG9pbnRzID0gW1xuICAgICAgICB7d2lkdGg6IDEsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiA1NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiA4NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICAgICAge3dpZHRoOiAxMTUwLCBpdGVtc1RvU2hvdzogMSwgaXRlbXNUb1Njcm9sbDogMX0sXG4gICAgICAgIHt3aWR0aDogMTQ1MCwgaXRlbXNUb1Nob3c6IDEsIGl0ZW1zVG9TY3JvbGw6IDF9LFxuICAgICAgICB7d2lkdGg6IDE3NTAsIGl0ZW1zVG9TaG93OiAxLCBpdGVtc1RvU2Nyb2xsOiAxfSxcbiAgICBdO1xuXG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcblxuICAgICAgICA8Q2Fyb3VzZWxDb250YWluZXI+XG4gICAgICAgICAgICB7bG9hZGluZyAmJiAoPGRpdj5Mb2FkaW5nLi4uPC9kaXY+KX1cbiAgICAgICAgICAgIHshbG9hZGluZyAmJiAoXG4gICAgICAgICAgICA8UGFnZUVsYXN0aWNDYXJvdXNlbFxuICAgICAgICAgICAgICAgIHJlbmRlckFycm93PXthcnJvd31cbiAgICAgICAgICAgICAgICBicmVha1BvaW50cz17Q2Fyb3VzZWxCcmVha3BvaW50c31cbiAgICAgICAgICAgICAgICBmb2N1c09uU2VsZWN0PXtmYWxzZX1cbiAgICAgICAgICAgICAgICBpdGVtc1RvU2hvdz17MX1cbiAgICAgICAgICAgICAgICBpdGVtc1RvU2Nyb2xsPXs1fVxuICAgICAgICAgICAgICAgIHBhZ2luYXRpb249e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHNob3dBcnJvd3M9e3RydWV9XG4gICAgICAgICAgICAgICAgZW5hYmxlU3dpcGU9e3RydWV9XG4gICAgICAgICAgICAgICAgZW5hYmxlTW91c2VTd2lwZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFRvdWNobW92ZUV2ZW50PXtmYWxzZX1cbiAgICAgICAgICAgICAgICBhdXRvUGxheVNwZWVkPXs4MDAwfVxuICAgICAgICAgICAgICAgIGVhc2luZz1cImN1YmljLWJlemllcigxLC4xNSwuNTUsMS41NClcIlxuICAgICAgICAgICAgICAgIHRpbHRFYXNpbmc9XCJjdWJpYy1iZXppZXIoMC4xMTAsIDEsIDEuMDAwLCAwLjIxMClcIlxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25Ncz17NzAwfVxuICAgICAgICAgICAgICAgIGVuYWJsZVRpbHQ9e3RydWV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhjYXJvdXNlbCkubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxUaXRsZSA9IGNhcm91c2VsW2l0ZW1dWydjb250ZW50ZmllbGRncm91cC5jb250ZW50LmNhcm91c2VsLml0ZW0udGl0bGUnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBDYXJvdXNlbFRleHQgPSBjYXJvdXNlbFtpdGVtXVsnY29udGVudGZpZWxkZ3JvdXAuY29udGVudC5jYXJvdXNlbC5pdGVtLnRleHQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBJbWFnZURhdGEgPSBjYXJvdXNlbFtpdGVtXVsnY29udGVudGZpZWxkZ3JvdXAuY29udGVudC5jYXJvdXNlbC5pdGVtLmltYWdlJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgSW1hZ2VJZCA9IEltYWdlRGF0YS5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBJbWFnZUFsdCA9IEltYWdlRGF0YS5hbHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgSW1hZ2VTaXplID0gSW1hZ2VEYXRhLnNpemVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IEltYWdlU2l6ZU1lZGl1bSA9IEltYWdlU2l6ZVsnbWVkaXVtJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxMaW5rID0gY2Fyb3VzZWxbaXRlbV1bJ2NvbnRlbnRmaWVsZGdyb3VwLmNvbnRlbnQuY2Fyb3VzZWwuaXRlbS5saW5rJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgQ2Fyb3VzZWxMaW5rVGFyZ2V0ID0gQ2Fyb3VzZWxMaW5rLnRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBDYXJvdXNlbExpbmtVcmwgPSBDYXJvdXNlbExpbmsudXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IENhcm91c2VsTGlua1RpdGxlID0gQ2Fyb3VzZWxMaW5rLnRpdGxlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxGaXJzdERpdiBrZXk9e2l9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2Vjb25kRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXtJbWFnZVNpemVNZWRpdW19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PXtJbWFnZUFsdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGhpcmREaXYvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NlY29uZERpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZpZnRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNpeHRoRGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge0Nhcm91c2VsVGl0bGUgJiYgPENhcm91c2VsVGl0bGVIMT57Q2Fyb3VzZWxUaXRsZX08L0Nhcm91c2VsVGl0bGVIMT59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcm91c2VsVGV4dCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb25TcGFuPntDYXJvdXNlbFRleHR9PC9EZXNjcmlwdGlvblNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXJvdXNlbExpbmsgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uTGlua1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj17Q2Fyb3VzZWxMaW5rVXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PXtDYXJvdXNlbExpbmtUYXJnZXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntDYXJvdXNlbExpbmtUaXRsZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb25MaW5rU3Bhbj4mI3gyNzljOzwvRGVzY3JpcHRpb25MaW5rU3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9EZXNjcmlwdGlvbkxpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1NpeHRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcm91c2VsTGluayAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGaWZ0aERpdlN2Z1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwibm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCI1MCwwIDEwMCwwIDUwLDEwMCAwLDEwMFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZpZnRoRGl2U3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZpZnRoRGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRmlyc3REaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L1BhZ2VFbGFzdGljQ2Fyb3VzZWw+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L0Nhcm91c2VsQ29udGFpbmVyPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQYWdlQ2Fyb3VzZWwpO1xuXG5leHBvcnQgZnVuY3Rpb24gYXJyb3coe3R5cGUsIG9uQ2xpY2ssIGlzRWRnZX0pIHtcbiAgICByZXR1cm4gdHlwZSA9PT0gY29uc3RzLlBSRVYgPyAoXG4gICAgICAgIDxCdXR0b25MZWZ0IG9uQ2xpY2s9e29uQ2xpY2t9IGRpc2FibGVkPXtpc0VkZ2V9PlxuICAgICAgICAgICAgPEJ1dHRvbkxlZnRTcGFuPiYjeDI3OWM7PC9CdXR0b25MZWZ0U3Bhbj5cbiAgICAgICAgPC9CdXR0b25MZWZ0PlxuICAgICkgOiA8QnV0dG9uUmlnaHQgb25DbGljaz17b25DbGlja30gZGlzYWJsZWQ9e2lzRWRnZX0+XG4gICAgICAgIDxCdXR0b25SaWdodFNwYW4+JiN4Mjc5Yzs8L0J1dHRvblJpZ2h0U3Bhbj5cbiAgICA8L0J1dHRvblJpZ2h0PlxufVxuXG5jb25zdCBDYXJvdXNlbENvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbS0xMCBteC1hdXRvIHNtOnAtMTYgc206cC0yNCBsZzpwLTQ4IHNtOmJnLWdyYXktMjAwYH1gO1xuXG5jb25zdCBGaXJzdERpdiA9IHN0eWxlZCgnZGl2JylgIFxuICAgIG1heC1oZWlnaHQ6NDByZW07IFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgbWluLWhlaWdodDogMzByZW07IFxuICAgICAgICAgICAgbWF4LWhlaWdodDogOTByZW07IFxuICAgIH1cbiAgICBcbiAgICAke3R3YHctZnVsbCBoLWZ1bGwgcmVsYXRpdmUgcm91bmRlZC1sZyBibG9jayBtZDpmbGV4IGl0ZW1zLWNlbnRlciBzaGFkb3cteGxgfWA7XG5cbmNvbnN0IFNlY29uZERpdiA9IHN0eWxlZCgnZGl2JylgIFxuICAgIG1pbi1oZWlnaHQ6IDMwcmVtOyBcbiAgICBtYXgtaGVpZ2h0OjQwcmVtOyBcbiAgICBoZWlnaHQ6MzhyZW07IFxuICAgICR7dHdgcmVsYXRpdmUgdy1mdWxsIG1kOnctMi81IG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLXQtbGcgbWQ6cm91bmRlZC10LW5vbmUgbWQ6cm91bmRlZC1sLWxnYH1gO1xuXG5jb25zdCBJbWFnZSA9IHN0eWxlZCgnaW1nJylgICR7dHdgYWJzb2x1dGUgaW5zZXQtMCB3LWZ1bGwgaC1mdWxsIG9iamVjdC1jb3ZlciBvYmplY3QtY2VudGVyYH1gO1xuXG5jb25zdCBUaGlyZERpdiA9IHN0eWxlZCgnZGl2JylgICR7dHdgYWJzb2x1dGUgaW5zZXQtMCB3LWZ1bGwgaC1mdWxsIGJnLXllbGxvdy0xMDAgb3BhY2l0eS0yNWB9YDtcblxuY29uc3QgRm91cnRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BhYnNvbHV0ZSBpbnNldC0wIHctZnVsbCBoLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZmlsbC1jdXJyZW50IHRleHQtd2hpdGVgfWA7XG5cbmNvbnN0IEZpZnRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2B3LWZ1bGwgbWQ6dy0zLzUgaC1mdWxsIGJnLWdyYXktMTAwIG1kOmJnLXRyYW5zcGFyZW50IGZsZXggaXRlbXMtY2VudGVyIHJvdW5kZWQtbGdgfWA7XG5cbmNvbnN0IFNpeHRoRGl2ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BwLTYgbWQ6cHItMjQgbWQ6cGwtMTYgbWQ6cHktMTJgfWA7XG5cbmNvbnN0IERlc2NyaXB0aW9uID0gc3R5bGVkKCdwJylgICR7dHdgdGV4dC1ncmF5LTYwMGB9YDtcblxuY29uc3QgRGVzY3JpcHRpb25TcGFuID0gc3R5bGVkKCdzcGFuJylgICR7dHdgdGV4dC1ncmF5LTkwMGB9YDtcblxuY29uc3QgRGVzY3JpcHRpb25MaW5rID0gc3R5bGVkKCdhJylgICR7dHdgZmxleCBpdGVtcy1iYXNlbGluZSBtdC0zIHRleHQtaW5kaWdvLTYwMCBob3Zlcjp0ZXh0LWluZGlnby05MDAgZm9jdXM6dGV4dC1pbmRpZ28tOTAwYH1gO1xuXG5jb25zdCBEZXNjcmlwdGlvbkxpbmtTcGFuID0gc3R5bGVkKCdzcGFuJylgICR7dHdgdGV4dC14cyBtbC0xYH1gO1xuXG5jb25zdCBGb3VydGhEaXZIMiA9IHN0eWxlZCgnaDInKWAgJHt0d2B3LWZ1bGwgaC0yNCB0ZXh0LWNlbnRlcmB9YDtcblxuY29uc3QgQ2Fyb3VzZWxUaXRsZUgxID0gc3R5bGVkKCdoMScpYCAke3R3YHctZnVsbCBteS0xIHNtOm15LTIgaC0zNiB0ZXh0LWxlZnRgfWA7XG5cbmNvbnN0IEZpZnRoRGl2U3ZnID0gc3R5bGVkKCdzdmcnKWAgJHt0d2BoaWRkZW4gbWQ6YmxvY2sgYWJzb2x1dGUgaW5zZXQteS0wIGgtZnVsbCB3LTI0IGZpbGwtY3VycmVudCB0ZXh0LWdyYXktMTAwIC1tbC0xMmB9YDtcblxuY29uc3QgQnV0dG9uTGVmdCA9IHN0eWxlZCgnYnV0dG9uJylgIHRyYW5zZm9ybTogc2NhbGUoLTEpOyAke3R3YHNlbGYtY2VudGVyIHotMTAgLW1yLTggYmctd2hpdGUgaG92ZXI6YmctZ3JheS05MDAgcm91bmRlZC1mdWxsIHNoYWRvdy0yeGwgaC0xNiB3LTE2IHRleHQtMnhsIHRleHQtaW5kaWdvLTYwMCBob3Zlcjp0ZXh0LWluZGlnby00MDAgZm9jdXM6dGV4dC1pbmRpZ28tNDAwIC1tbC02IGN1cnNvci1wb2ludGVyIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpzaGFkb3ctb3V0bGluZWB9YDtcblxuY29uc3QgQnV0dG9uTGVmdFNwYW4gPSBzdHlsZWQoJ3NwYW4nKWAgJHt0d2BibG9jayB0ZXh0LTN4bCBweC00YH1gO1xuXG5jb25zdCBCdXR0b25SaWdodCA9IHN0eWxlZCgnYnV0dG9uJylgICR7dHdgc2VsZi1jZW50ZXIgei0xMCAtbWwtOCBiZy13aGl0ZSByb3VuZGVkLWZ1bGwgc2hhZG93LTJ4bCBob3ZlcjpiZy1ncmF5LTkwMCBoLTE2IHctMTYgdGV4dC0yeGwgdGV4dC1pbmRpZ28tNjAwIGhvdmVyOnRleHQtaW5kaWdvLTQwMCBmb2N1czp0ZXh0LWluZGlnby00MDAgLW1yLTYgZm9jdXM6b3V0bGluZS1ub25lIGN1cnNvci1wb2ludGVyIGZvY3VzOnNoYWRvdy1vdXRsaW5lYH1gO1xuXG5jb25zdCBCdXR0b25SaWdodFNwYW4gPSBzdHlsZWQoJ3NwYW4nKWAgJHt0d2BibG9jayB0ZXh0LTN4bCBweC00YH1gO1xuXG5jb25zdCBQYWdlRWxhc3RpY0Nhcm91c2VsID0gc3R5bGVkKENhcm91c2VsKWAgXG4gICAgb3V0bGluZTpub25lOyBcbiAgICBtYXgtaGVpZ2h0OjMzMHB4O1xuICAgIFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgbWF4LWhlaWdodDoxMDAwcHg7IFxuICB9XG4ke3R3YGB9YDsiXX0= */\");var Description=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('p',{target:\"e1da3q7v8\",label:\"Description\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-600\")), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var DescriptionSpan=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('span',{target:\"e1da3q7v9\",label:\"DescriptionSpan\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-900\")), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var DescriptionLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('a',{target:\"e1da3q7v10\",label:\"DescriptionLink\"})(Object.assign({\"display\":\"flex\",\"alignItems\":\"baseline\",\"marginTop\":_tailwindConfig.theme.margin[\"3\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-600\"),{\":hover\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-900\")),\":focus\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-900\"))}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var DescriptionLinkSpan=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('span',{target:\"e1da3q7v11\",label:\"DescriptionLinkSpan\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"xs\"),{\"marginLeft\":_tailwindConfig.theme.margin[\"1\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var FourthDivH2=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h2',{target:\"e1da3q7v12\",label:\"FourthDivH2\"})({\"width\":_tailwindConfig.theme.width[\"full\"],\"height\":_tailwindConfig.theme.height[\"24\"],\"textAlign\":\"center\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var CarouselTitleH1=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h1',{target:\"e1da3q7v13\",label:\"CarouselTitleH1\"})({\"width\":_tailwindConfig.theme.width[\"full\"],\"marginTop\":_tailwindConfig.theme.margin[\"1\"],\"marginBottom\":_tailwindConfig.theme.margin[\"1\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"sm\")]:{\"marginTop\":_tailwindConfig.theme.margin[\"2\"],\"marginBottom\":_tailwindConfig.theme.margin[\"2\"]},\"height\":_tailwindConfig.theme.height[\"36\"],\"textAlign\":\"left\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var FifthDivSvg=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('svg',{target:\"e1da3q7v14\",label:\"FifthDivSvg\"})(Object.assign({\"display\":\"none\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"display\":\"block\"},\"position\":\"absolute\",\"top\":_tailwindConfig.theme.inset[\"0\"],\"bottom\":_tailwindConfig.theme.inset[\"0\"],\"height\":_tailwindConfig.theme.height[\"full\"],\"width\":_tailwindConfig.theme.width[\"24\"],\"fill\":_tailwindConfig.theme.fill[\"current\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-100\"),{\"marginLeft\":_tailwindConfig.theme.margin[\"-12\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ButtonLeft=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('button',{target:\"e1da3q7v15\",label:\"ButtonLeft\"})(\"transform:scale(-1);\",Object.assign({\"alignSelf\":\"center\",\"zIndex\":_tailwindConfig.theme.zIndex[\"10\"],\"marginRight\":_tailwindConfig.theme.margin[\"-8\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"white\"),{\":hover\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"gray-900\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-400\")),\"borderRadius\":_tailwindConfig.theme.borderRadius[\"full\"],\"boxShadow\":_tailwindConfig.theme.boxShadow[\"2xl\"],\"height\":_tailwindConfig.theme.height[\"16\"],\"width\":_tailwindConfig.theme.width[\"16\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"2xl\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-600\"),{\":focus\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-400\"),{\"outline\":0,\"boxShadow\":_tailwindConfig.theme.boxShadow[\"outline\"]}),\"marginLeft\":_tailwindConfig.theme.margin[\"-6\"],\"cursor\":_tailwindConfig.theme.cursor[\"pointer\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ButtonLeftSpan=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('span',{target:\"e1da3q7v16\",label:\"ButtonLeftSpan\"})(Object.assign({\"display\":\"block\"},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"3xl\"),{\"paddingLeft\":_tailwindConfig.theme.padding[\"4\"],\"paddingRight\":_tailwindConfig.theme.padding[\"4\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ButtonRight=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('button',{target:\"e1da3q7v17\",label:\"ButtonRight\"})(Object.assign({\"alignSelf\":\"center\",\"zIndex\":_tailwindConfig.theme.zIndex[\"10\"],\"marginLeft\":_tailwindConfig.theme.margin[\"-8\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"white\"),{\"borderRadius\":_tailwindConfig.theme.borderRadius[\"full\"],\"boxShadow\":_tailwindConfig.theme.boxShadow[\"2xl\"],\":hover\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"gray-900\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-400\")),\"height\":_tailwindConfig.theme.height[\"16\"],\"width\":_tailwindConfig.theme.width[\"16\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"2xl\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-600\"),{\":focus\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"indigo-400\"),{\"outline\":0,\"boxShadow\":_tailwindConfig.theme.boxShadow[\"outline\"]}),\"marginRight\":_tailwindConfig.theme.margin[\"-6\"],\"cursor\":_tailwindConfig.theme.cursor[\"pointer\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ButtonRightSpan=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('span',{target:\"e1da3q7v18\",label:\"ButtonRightSpan\"})(Object.assign({\"display\":\"block\"},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"3xl\"),{\"paddingLeft\":_tailwindConfig.theme.padding[\"4\"],\"paddingRight\":_tailwindConfig.theme.padding[\"4\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var PageElasticCarousel=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(react_elastic_carousel__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{target:\"e1da3q7v19\",label:\"PageElasticCarousel\"})( false?undefined:{name:\"zw7hnb\",styles:\"outline:none;max-height:330px;@media (max-width:768px){height:auto;max-height:1000px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/Carousel/PageCarousel.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/HighlightedLink.js":
/*!****************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/HighlightedLink.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var HighlightedLink=(_ref)=>{var{state,actions,libraries,target,title,url}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Container,{href:url,target:target},title):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(HighlightedLink));var Container=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('a',{target:\"e1o95dcx0\",label:\"Container\"})(Object.assign({\"marginTop\":_tailwindConfig.theme.margin[\"10\"],\"marginBottom\":_tailwindConfig.theme.margin[\"10\"],\"marginLeft\":_tailwindConfig.theme.margin[\"5\"],\"marginRight\":_tailwindConfig.theme.margin[\"5\"],\"borderRadius\":_tailwindConfig.theme.borderRadius[\"default\"],\"maxWidth\":_tailwindConfig.theme.maxWidth[\"xl\"],\"display\":\"inline-block\",\"padding\":_tailwindConfig.theme.padding[\"20\"],\"boxShadow\":_tailwindConfig.theme.boxShadow[\"2xl\"],\":hover\":{\"boxShadow\":_tailwindConfig.theme.boxShadow[\"none\"]}},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"borderWidth\",\"config\":\"borderWidth\"},{\"prop\":\"borderColor\",\"config\":\"borderColor\"}],\"2\"),{\"borderStyle\":\"solid\"}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0hpZ2hsaWdodGVkTGluay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQzZCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0hpZ2hsaWdodGVkTGluay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5cbmNvbnN0IEhpZ2hsaWdodGVkTGluayA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgdGFyZ2V0LCB0aXRsZSwgdXJsfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxDb250YWluZXIgaHJlZj17dXJsfVxuICAgICAgICAgICAgICAgICAgIHRhcmdldD17dGFyZ2V0fT5cbiAgICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgKSA6IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEhpZ2hsaWdodGVkTGluayk7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZCgnYScpYCAke3R3YG15LTEwIG14LTUgcm91bmRlZCBtYXgtdy14bCBpbmxpbmUtYmxvY2sgcC0yMCBzaGFkb3ctMnhsIGhvdmVyOnNoYWRvdy1ub25lIGJvcmRlci0yIGJvcmRlci1zb2xpZGB9YDtcblxuXG5cblxuXG5cblxuXG4iXX0= */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9IaWdobGlnaHRlZExpbmsuanM/YjAwYiJdLCJuYW1lcyI6WyJIaWdobGlnaHRlZExpbmsiLCJzdGF0ZSIsImFjdGlvbnMiLCJsaWJyYXJpZXMiLCJ0YXJnZXQiLCJ0aXRsZSIsInVybCIsInVzZUVmZmVjdCIsInNvdXJjZSIsImZldGNoIiwicm91dGVyIiwibGluayIsImRhdGEiLCJnZXQiLCJwYWdlIiwidHlwZSIsImlkIiwiSHRtbDJSZWFjdCIsImh0bWwycmVhY3QiLCJDb21wb25lbnQiLCJpc1JlYWR5IiwiY29ubmVjdCIsIkNvbnRhaW5lciIsIl90YWlsd2luZENvbmZpZyIsInRoZW1lIiwibWFyZ2luIiwiYm9yZGVyUmFkaXVzIiwibWF4V2lkdGgiLCJwYWRkaW5nIiwiYm94U2hhZG93IiwiX3RhaWx3aW5kVXRpbHMiLCJyZXNvbHZlU3R5bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O2lLQUlBLEdBQU1BLGdCQUFlLENBQUcsUUFBcUQsSUFBcEQsQ0FBQ0MsS0FBRCxDQUFRQyxPQUFSLENBQWlCQyxTQUFqQixDQUE0QkMsTUFBNUIsQ0FBb0NDLEtBQXBDLENBQTJDQyxHQUEzQyxDQUFvRCxNQUV6RTtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0lDLHVEQUFTLENBQUMsSUFBTSxDQUNaTCxPQUFPLENBQUNNLE1BQVIsQ0FBZUMsS0FBZixDQUFxQlIsS0FBSyxDQUFDUyxNQUFOLENBQWFDLElBQWxDLEVBQ0gsQ0FGUSxDQUVOLEVBRk0sQ0FBVCxDQUlBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHWCxLQUFLLENBQUNPLE1BQU4sQ0FBYUssR0FBYixDQUFpQlosS0FBSyxDQUFDUyxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1HLEtBQUksQ0FBR2IsS0FBSyxDQUFDTyxNQUFOLENBQWFJLElBQUksQ0FBQ0csSUFBbEIsRUFBd0JILElBQUksQ0FBQ0ksRUFBN0IsQ0FBYixDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBTUMsV0FBVSxDQUFHZCxTQUFTLENBQUNlLFVBQVYsQ0FBcUJDLFNBQXhDLENBR0EsTUFBT1AsS0FBSSxDQUFDUSxPQUFMLENBQ0gsMERBQUMsU0FBRCxFQUFXLElBQUksQ0FBRWQsR0FBakIsQ0FDVyxNQUFNLENBQUVGLE1BRG5CLEVBRUtDLEtBRkwsQ0FERyxDQUtILElBTEosQ0FNSCxDQTVCRCxDQThCZWdCLHVIQUFPLENBQUNyQixlQUFELENBQXRCLEVBRUEsR0FBTXNCLFVBQVMsQ0FBRyxrRkFBTyxHQUFQLHdDQUFILENBQW9CLDJCQXBDbkNDLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCLElBQTdCLENBb0NtQyxnQkFwQ25DRixlQUFlLENBQUNDLEtBQWhCLENBQXNCQyxNQUF0QixDQUE2QixJQUE3QixDQW9DbUMsY0FwQ25DRixlQUFlLENBQUNDLEtBQWhCLENBQXNCQyxNQUF0QixDQUE2QixHQUE3QixDQW9DbUMsZUFwQ25DRixlQUFlLENBQUNDLEtBQWhCLENBQXNCQyxNQUF0QixDQUE2QixHQUE3QixDQW9DbUMsZ0JBcENuQ0YsZUFBZSxDQUFDQyxLQUFoQixDQUFzQkUsWUFBdEIsQ0FBbUMsU0FBbkMsQ0FvQ21DLFlBcENuQ0gsZUFBZSxDQUFDQyxLQUFoQixDQUFzQkcsUUFBdEIsQ0FBK0IsSUFBL0IsQ0FvQ21DLG9DQXBDbkNKLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JJLE9BQXRCLENBQThCLElBQTlCLENBb0NtQyxhQXBDbkNMLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JLLFNBQXRCLENBQWdDLEtBQWhDLENBb0NtQyx1QkFwQ25DTixlQUFlLENBQUNDLEtBQWhCLENBQXNCSyxTQUF0QixDQUFnQyxNQUFoQyxDQW9DbUMsR0FwQ25DQyxrRUFBYyxDQUFDQyxZQUFmLENBQTRCUixlQUE1QixDQUE2QyxDQUFDLENBQUMsT0FBTyxhQUFSLENBQXNCLFNBQVMsYUFBL0IsQ0FBRCxDQUErQyxDQUFDLE9BQU8sYUFBUixDQUFzQixTQUFTLGFBQS9CLENBQS9DLENBQTdDLENBQTJJLEdBQTNJLENBb0NtQyx5QkFBcEIsb3RFQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvdHdlbnR5dHdlbnR5LXRoZW1lL3NyYy9jb21wb25lbnRzL3BhZ2UvYWNmL0NvbnRlbnQvSGlnaGxpZ2h0ZWRMaW5rLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcblxuY29uc3QgSGlnaGxpZ2h0ZWRMaW5rID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0YXJnZXQsIHRpdGxlLCB1cmx9KSA9PiB7XG5cbiAgICAvKipcbiAgICAgKiBPbmNlIHRoZSBwb3N0IGhhcyBsb2FkZWQgaW4gdGhlIERPTSwgcHJlZmV0Y2ggYm90aCB0aGVcbiAgICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgICAqL1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFjdGlvbnMuc291cmNlLmZldGNoKHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgYXV0aG9yLlxuICAgIC8vIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAgIC8vIEdldCBhIGh1bWFuIHJlYWRhYmxlIGRhdGUuXG4gICAgLy8gY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBvc3QuZGF0ZSk7XG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcblxuXG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPENvbnRhaW5lciBocmVmPXt1cmx9XG4gICAgICAgICAgICAgICAgICAgdGFyZ2V0PXt0YXJnZXR9PlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoSGlnaGxpZ2h0ZWRMaW5rKTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdhJylgICR7dHdgbXktMTAgbXgtNSByb3VuZGVkIG1heC13LXhsIGlubGluZS1ibG9jayBwLTIwIHNoYWRvdy0yeGwgaG92ZXI6c2hhZG93LW5vbmUgYm9yZGVyLTIgYm9yZGVyLXNvbGlkYH1gO1xuXG5cblxuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/HighlightedLink.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/InstaFeed.js":
/*!**********************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/InstaFeed.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_instagram_embed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-instagram-embed */ \"./node_modules/react-instagram-embed/es/index.js\");\n/* harmony import */ var _global_SectionTitle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../global/SectionTitle */ \"./packages/twentytwenty-theme/src/components/page/global/SectionTitle.js\");\n/* harmony import */ var _global_taxonomies_RecipeTaxonomies_RecipeTaxonomy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../global/taxonomies/RecipeTaxonomies/RecipeTaxonomy */ \"./packages/twentytwenty-theme/src/components/global/taxonomies/RecipeTaxonomies/RecipeTaxonomy.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var InstaFeed=(_ref)=>{var{state,actions,libraries,title,posts}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_global_SectionTitle__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{title:title}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(InstaPosts,null,Object.keys(posts).map((key,id)=>{var InstaPostUrl=posts[key]['contentfieldgroup.content.instafeed.posts.url'];return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(InstaPost,{key:key},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react_instagram_embed__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{url:InstaPostUrl,maxWidth:320,hideCaption:true,containerTagName:\"div\",protocol:\"\",injectScript:true}));}))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(InstaFeed));var InstaPosts=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1cflrgi0\",label:\"InstaPosts\"})({\"display\":\"flex\",\"flexWrap\":\"wrap\",\"alignContent\":\"center\",\"justifyContent\":\"center\",\"height\":_tailwindConfig.theme.height[\"auto\"],\"margin\":_tailwindConfig.theme.margin[\"auto\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0luc3RhRmVlZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RGdDIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0luc3RhRmVlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBJbnN0YUZlZWQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcG9zdHMsXG4gICAgICAgICAgICAgICAgICAgfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxTZWN0aW9uVGl0bGUgdGl0bGU9e3RpdGxlfS8+XG4gICAgICAgICAgICA8SW5zdGFQb3N0cz5cbiAgICAgICAgICAgICAgICB7T2JqZWN0LmtleXMocG9zdHMpLm1hcCgoa2V5LCBpZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBJbnN0YVBvc3RVcmwgPSBwb3N0c1trZXldWydjb250ZW50ZmllbGRncm91cC5jb250ZW50Lmluc3RhZmVlZC5wb3N0cy51cmwnXTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhUG9zdCBrZXk9e2tleX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhZ3JhbUVtYmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybD17SW5zdGFQb3N0VXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aD17MzIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlQ2FwdGlvbj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVGFnTmFtZT0nZGl2J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm90b2NvbD0nJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmplY3RTY3JpcHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9JbnN0YVBvc3Q+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L0luc3RhUG9zdHM+XG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChJbnN0YUZlZWQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdfQ== */\");// const InstaPosts = styled('div')` ${tw`flex flex-wrap items-center justify-between h-auto m-auto`}`;\nvar InstaPost=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1cflrgi1\",label:\"InstaPost\"})({\"paddingLeft\":_tailwindConfig.theme.padding[\"4\"],\"paddingRight\":_tailwindConfig.theme.padding[\"4\"],\"display\":\"inline-flex\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0luc3RhRmVlZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RCtCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0luc3RhRmVlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBJbnN0YUZlZWQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcG9zdHMsXG4gICAgICAgICAgICAgICAgICAgfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxTZWN0aW9uVGl0bGUgdGl0bGU9e3RpdGxlfS8+XG4gICAgICAgICAgICA8SW5zdGFQb3N0cz5cbiAgICAgICAgICAgICAgICB7T2JqZWN0LmtleXMocG9zdHMpLm1hcCgoa2V5LCBpZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBJbnN0YVBvc3RVcmwgPSBwb3N0c1trZXldWydjb250ZW50ZmllbGRncm91cC5jb250ZW50Lmluc3RhZmVlZC5wb3N0cy51cmwnXTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhUG9zdCBrZXk9e2tleX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhZ3JhbUVtYmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybD17SW5zdGFQb3N0VXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aD17MzIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlQ2FwdGlvbj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVGFnTmFtZT0nZGl2J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm90b2NvbD0nJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmplY3RTY3JpcHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9JbnN0YVBvc3Q+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L0luc3RhUG9zdHM+XG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChJbnN0YUZlZWQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdfQ== */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9JbnN0YUZlZWQuanM/ZjhjYSJdLCJuYW1lcyI6WyJJbnN0YUZlZWQiLCJzdGF0ZSIsImFjdGlvbnMiLCJsaWJyYXJpZXMiLCJ0aXRsZSIsInBvc3RzIiwidXNlRWZmZWN0Iiwic291cmNlIiwiZmV0Y2giLCJyb3V0ZXIiLCJsaW5rIiwiZGF0YSIsImdldCIsInBhZ2UiLCJ0eXBlIiwiaWQiLCJIdG1sMlJlYWN0IiwiaHRtbDJyZWFjdCIsIkNvbXBvbmVudCIsImlzUmVhZHkiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5IiwiSW5zdGFQb3N0VXJsIiwiY29ubmVjdCIsIkluc3RhUG9zdHMiLCJfdGFpbHdpbmRDb25maWciLCJ0aGVtZSIsImhlaWdodCIsIm1hcmdpbiIsIkluc3RhUG9zdCIsInBhZGRpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O2lLQU9BLEdBQU1BLFVBQVMsQ0FBRyxRQU1PLElBTk4sQ0FDSUMsS0FESixDQUVJQyxPQUZKLENBR0lDLFNBSEosQ0FJSUMsS0FKSixDQUtJQyxLQUxKLENBTU0sTUFFckI7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNJQyx1REFBUyxDQUFDLElBQU0sQ0FDWkosT0FBTyxDQUFDSyxNQUFSLENBQWVDLEtBQWYsQ0FBcUJQLEtBQUssQ0FBQ1EsTUFBTixDQUFhQyxJQUFsQyxFQUNILENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQTtBQUNBLEdBQU1DLEtBQUksQ0FBR1YsS0FBSyxDQUFDTSxNQUFOLENBQWFLLEdBQWIsQ0FBaUJYLEtBQUssQ0FBQ1EsTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0E7QUFDQSxHQUFNRyxLQUFJLENBQUdaLEtBQUssQ0FBQ00sTUFBTixDQUFhSSxJQUFJLENBQUNHLElBQWxCLEVBQXdCSCxJQUFJLENBQUNJLEVBQTdCLENBQWIsQ0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQU1DLFdBQVUsQ0FBR2IsU0FBUyxDQUFDYyxVQUFWLENBQXFCQyxTQUF4QyxDQUNBLE1BQU9QLEtBQUksQ0FBQ1EsT0FBTCxDQUNILHFIQUNJLDBEQUFDLDREQUFELEVBQWMsS0FBSyxDQUFFZixLQUFyQixFQURKLENBRUksMERBQUMsVUFBRCxNQUNLZ0IsTUFBTSxDQUFDQyxJQUFQLENBQVloQixLQUFaLEVBQW1CaUIsR0FBbkIsQ0FBdUIsQ0FBQ0MsR0FBRCxDQUFNUixFQUFOLEdBQWEsQ0FDakMsR0FBTVMsYUFBWSxDQUFHbkIsS0FBSyxDQUFDa0IsR0FBRCxDQUFMLENBQVcsK0NBQVgsQ0FBckIsQ0FFQSxNQUNJLDJEQUFDLFNBQUQsRUFBVyxHQUFHLENBQUVBLEdBQWhCLEVBQ0ksMERBQUMsNkRBQUQsRUFDSSxHQUFHLENBQUVDLFlBRFQsQ0FFSSxRQUFRLENBQUUsR0FGZCxDQUdJLFdBQVcsQ0FBRSxJQUhqQixDQUlJLGdCQUFnQixDQUFDLEtBSnJCLENBS0ksUUFBUSxDQUFDLEVBTGIsQ0FNSSxZQUFZLEtBTmhCLEVBREosQ0FESixDQVlILENBZkEsQ0FETCxDQUZKLENBREcsQ0FzQkgsSUF0QkosQ0F1QkgsQ0FqREQsQ0FtRGVDLHVIQUFPLENBQUN6QixTQUFELENBQXRCLEVBRUEsR0FBTTBCLFdBQVUsQ0FBRyxrRkFBTyxLQUFQLHlDQUFILENBQXNCLCtGQTVEdENDLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCLE1BQTdCLENBNERzQyxVQTVEdENGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JFLE1BQXRCLENBQTZCLE1BQTdCLENBNERzQyxDQUF0Qix3c0hBQWhCLENBQ0E7QUFDQSxHQUFNQyxVQUFTLENBQUcsa0ZBQU8sS0FBUCx3Q0FBSCxDQUFzQixlQTlEckNKLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JJLE9BQXRCLENBQThCLEdBQTlCLENBOERxQyxnQkE5RHJDTCxlQUFlLENBQUNDLEtBQWhCLENBQXNCSSxPQUF0QixDQUE4QixHQUE5QixDQThEcUMseUJBQXRCLHdzSEFBZiIsImZpbGUiOiIuL3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L0luc3RhRmVlZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBJbnN0YUZlZWQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcG9zdHMsXG4gICAgICAgICAgICAgICAgICAgfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxTZWN0aW9uVGl0bGUgdGl0bGU9e3RpdGxlfS8+XG4gICAgICAgICAgICA8SW5zdGFQb3N0cz5cbiAgICAgICAgICAgICAgICB7T2JqZWN0LmtleXMocG9zdHMpLm1hcCgoa2V5LCBpZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBJbnN0YVBvc3RVcmwgPSBwb3N0c1trZXldWydjb250ZW50ZmllbGRncm91cC5jb250ZW50Lmluc3RhZmVlZC5wb3N0cy51cmwnXTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhUG9zdCBrZXk9e2tleX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEluc3RhZ3JhbUVtYmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybD17SW5zdGFQb3N0VXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aD17MzIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlQ2FwdGlvbj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVGFnTmFtZT0nZGl2J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm90b2NvbD0nJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmplY3RTY3JpcHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9JbnN0YVBvc3Q+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L0luc3RhUG9zdHM+XG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChJbnN0YUZlZWQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/InstaFeed.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/PinterestWidget.js":
/*!****************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/PinterestWidget.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_instagram_embed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-instagram-embed */ \"./node_modules/react-instagram-embed/es/index.js\");\n/* harmony import */ var _global_SectionTitle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../global/SectionTitle */ \"./packages/twentytwenty-theme/src/components/page/global/SectionTitle.js\");\n/* harmony import */ var _global_taxonomies_RecipeTaxonomies_RecipeTaxonomy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../global/taxonomies/RecipeTaxonomies/RecipeTaxonomy */ \"./packages/twentytwenty-theme/src/components/global/taxonomies/RecipeTaxonomies/RecipeTaxonomy.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var PinterestWidget=(_ref)=>{var{state,actions,libraries,title,profile}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_global_SectionTitle__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{title:title}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"a\",{\"data-pin-do\":\"embedUser\",\"data-pin-board-width\":\"400\",\"data-pin-scale-height\":\"240\",\"data-pin-scale-width\":\"100\",href:profile})):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(PinterestWidget));var InstaPosts=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eb9lquy0\",label:\"InstaPosts\"})({\"display\":\"flex\",\"flexWrap\":\"wrap\",\"alignContent\":\"center\",\"justifyContent\":\"center\",\"height\":_tailwindConfig.theme.height[\"auto\"],\"margin\":_tailwindConfig.theme.margin[\"auto\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1BpbnRlcmVzdFdpZGdldC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q2dDIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1BpbnRlcmVzdFdpZGdldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBQaW50ZXJlc3RXaWRnZXQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSxcbiAgICAgICAgICAgICAgICAgICB9KSA9PiB7XG5cbiAgICAvKipcbiAgICAgKiBPbmNlIHRoZSBwb3N0IGhhcyBsb2FkZWQgaW4gdGhlIERPTSwgcHJlZmV0Y2ggYm90aCB0aGVcbiAgICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgICAqL1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFjdGlvbnMuc291cmNlLmZldGNoKHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgYXV0aG9yLlxuICAgIC8vIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAgIC8vIEdldCBhIGh1bWFuIHJlYWRhYmxlIGRhdGUuXG4gICAgLy8gY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBvc3QuZGF0ZSk7XG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPFNlY3Rpb25UaXRsZSB0aXRsZT17dGl0bGV9Lz5cblxuICAgICAgICAgICAgPGEgZGF0YS1waW4tZG89XCJlbWJlZFVzZXJcIiBkYXRhLXBpbi1ib2FyZC13aWR0aD1cIjQwMFwiIGRhdGEtcGluLXNjYWxlLWhlaWdodD1cIjI0MFwiIGRhdGEtcGluLXNjYWxlLXdpZHRoPVwiMTAwXCIgaHJlZj17cHJvZmlsZX0+PC9hPlxuXG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQaW50ZXJlc3RXaWRnZXQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdfQ== */\");// const InstaPosts = styled('div')` ${tw`flex flex-wrap items-center justify-between h-auto m-auto`}`;\nvar InstaPost=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"eb9lquy1\",label:\"InstaPost\"})({\"paddingLeft\":_tailwindConfig.theme.padding[\"4\"],\"paddingRight\":_tailwindConfig.theme.padding[\"4\"],\"display\":\"inline-flex\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1BpbnRlcmVzdFdpZGdldC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQytCIiwiZmlsZSI6Ii9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1BpbnRlcmVzdFdpZGdldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBQaW50ZXJlc3RXaWRnZXQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSxcbiAgICAgICAgICAgICAgICAgICB9KSA9PiB7XG5cbiAgICAvKipcbiAgICAgKiBPbmNlIHRoZSBwb3N0IGhhcyBsb2FkZWQgaW4gdGhlIERPTSwgcHJlZmV0Y2ggYm90aCB0aGVcbiAgICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgICAqL1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFjdGlvbnMuc291cmNlLmZldGNoKHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgYXV0aG9yLlxuICAgIC8vIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAgIC8vIEdldCBhIGh1bWFuIHJlYWRhYmxlIGRhdGUuXG4gICAgLy8gY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBvc3QuZGF0ZSk7XG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPFNlY3Rpb25UaXRsZSB0aXRsZT17dGl0bGV9Lz5cblxuICAgICAgICAgICAgPGEgZGF0YS1waW4tZG89XCJlbWJlZFVzZXJcIiBkYXRhLXBpbi1ib2FyZC13aWR0aD1cIjQwMFwiIGRhdGEtcGluLXNjYWxlLWhlaWdodD1cIjI0MFwiIGRhdGEtcGluLXNjYWxlLXdpZHRoPVwiMTAwXCIgaHJlZj17cHJvZmlsZX0+PC9hPlxuXG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQaW50ZXJlc3RXaWRnZXQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdfQ== */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9QaW50ZXJlc3RXaWRnZXQuanM/NTEyMSJdLCJuYW1lcyI6WyJQaW50ZXJlc3RXaWRnZXQiLCJzdGF0ZSIsImFjdGlvbnMiLCJsaWJyYXJpZXMiLCJ0aXRsZSIsInByb2ZpbGUiLCJ1c2VFZmZlY3QiLCJzb3VyY2UiLCJmZXRjaCIsInJvdXRlciIsImxpbmsiLCJkYXRhIiwiZ2V0IiwicGFnZSIsInR5cGUiLCJpZCIsIkh0bWwyUmVhY3QiLCJodG1sMnJlYWN0IiwiQ29tcG9uZW50IiwiaXNSZWFkeSIsImNvbm5lY3QiLCJJbnN0YVBvc3RzIiwiX3RhaWx3aW5kQ29uZmlnIiwidGhlbWUiLCJoZWlnaHQiLCJtYXJnaW4iLCJJbnN0YVBvc3QiLCJwYWRkaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztpS0FPQSxHQUFNQSxnQkFBZSxDQUFHLFFBTUMsSUFOQSxDQUNGQyxLQURFLENBRUZDLE9BRkUsQ0FHRkMsU0FIRSxDQUlGQyxLQUpFLENBS0ZDLE9BTEUsQ0FNQSxNQUVyQjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0lDLHVEQUFTLENBQUMsSUFBTSxDQUNaSixPQUFPLENBQUNLLE1BQVIsQ0FBZUMsS0FBZixDQUFxQlAsS0FBSyxDQUFDUSxNQUFOLENBQWFDLElBQWxDLEVBQ0gsQ0FGUSxDQUVOLEVBRk0sQ0FBVCxDQUlBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHVixLQUFLLENBQUNNLE1BQU4sQ0FBYUssR0FBYixDQUFpQlgsS0FBSyxDQUFDUSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1HLEtBQUksQ0FBR1osS0FBSyxDQUFDTSxNQUFOLENBQWFJLElBQUksQ0FBQ0csSUFBbEIsRUFBd0JILElBQUksQ0FBQ0ksRUFBN0IsQ0FBYixDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBTUMsV0FBVSxDQUFHYixTQUFTLENBQUNjLFVBQVYsQ0FBcUJDLFNBQXhDLENBQ0EsTUFBT1AsS0FBSSxDQUFDUSxPQUFMLENBQ0gscUhBQ0ksMERBQUMsNERBQUQsRUFBYyxLQUFLLENBQUVmLEtBQXJCLEVBREosQ0FHSSwrREFBRyxjQUFZLFdBQWYsQ0FBMkIsdUJBQXFCLEtBQWhELENBQXNELHdCQUFzQixLQUE1RSxDQUFrRix1QkFBcUIsS0FBdkcsQ0FBNkcsSUFBSSxDQUFFQyxPQUFuSCxFQUhKLENBREcsQ0FPSCxJQVBKLENBUUgsQ0FsQ0QsQ0FvQ2VlLHVIQUFPLENBQUNwQixlQUFELENBQXRCLEVBRUEsR0FBTXFCLFdBQVUsQ0FBRyxrRkFBTyxLQUFQLHdDQUFILENBQXNCLCtGQTdDdENDLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCLE1BQTdCLENBNkNzQyxVQTdDdENGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JFLE1BQXRCLENBQTZCLE1BQTdCLENBNkNzQyxDQUF0QixnOUZBQWhCLENBQ0E7QUFDQSxHQUFNQyxVQUFTLENBQUcsa0ZBQU8sS0FBUCx1Q0FBSCxDQUFzQixlQS9DckNKLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JJLE9BQXRCLENBQThCLEdBQTlCLENBK0NxQyxnQkEvQ3JDTCxlQUFlLENBQUNDLEtBQWhCLENBQXNCSSxPQUF0QixDQUE4QixHQUE5QixDQStDcUMseUJBQXRCLGc5RkFBZiIsImZpbGUiOiIuL3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1BpbnRlcmVzdFdpZGdldC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5pbXBvcnQgSW5zdGFncmFtRW1iZWQgZnJvbSAncmVhY3QtaW5zdGFncmFtLWVtYmVkJztcbmltcG9ydCBTZWN0aW9uVGl0bGUgZnJvbSBcIi4uLy4uL2dsb2JhbC9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBSZWNpcGVUYXhvbm9teSBmcm9tIFwiLi4vLi4vLi4vZ2xvYmFsL3RheG9ub21pZXMvUmVjaXBlVGF4b25vbWllcy9SZWNpcGVUYXhvbm9teVwiO1xuXG5jb25zdCBQaW50ZXJlc3RXaWRnZXQgPSAoe1xuICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgbGlicmFyaWVzLFxuICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgcHJvZmlsZSxcbiAgICAgICAgICAgICAgICAgICB9KSA9PiB7XG5cbiAgICAvKipcbiAgICAgKiBPbmNlIHRoZSBwb3N0IGhhcyBsb2FkZWQgaW4gdGhlIERPTSwgcHJlZmV0Y2ggYm90aCB0aGVcbiAgICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgICAqL1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFjdGlvbnMuc291cmNlLmZldGNoKHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgYXV0aG9yLlxuICAgIC8vIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAgIC8vIEdldCBhIGh1bWFuIHJlYWRhYmxlIGRhdGUuXG4gICAgLy8gY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBvc3QuZGF0ZSk7XG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPFNlY3Rpb25UaXRsZSB0aXRsZT17dGl0bGV9Lz5cblxuICAgICAgICAgICAgPGEgZGF0YS1waW4tZG89XCJlbWJlZFVzZXJcIiBkYXRhLXBpbi1ib2FyZC13aWR0aD1cIjQwMFwiIGRhdGEtcGluLXNjYWxlLWhlaWdodD1cIjI0MFwiIGRhdGEtcGluLXNjYWxlLXdpZHRoPVwiMTAwXCIgaHJlZj17cHJvZmlsZX0+PC9hPlxuXG4gICAgICAgIDwvPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQaW50ZXJlc3RXaWRnZXQpO1xuXG5jb25zdCBJbnN0YVBvc3RzID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BmbGV4IGZsZXgtd3JhcCBjb250ZW50LWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWF1dG8gbS1hdXRvYH1gO1xuLy8gY29uc3QgSW5zdGFQb3N0cyA9IHN0eWxlZCgnZGl2JylgICR7dHdgZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBoLWF1dG8gbS1hdXRvYH1gO1xuY29uc3QgSW5zdGFQb3N0ID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BweC00IGlubGluZS1mbGV4YH1gO1xuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/PinterestWidget.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/ProfileCard.js":
/*!************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/ProfileCard.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../link */ \"./packages/twentytwenty-theme/src/components/link.js\");\n/* harmony import */ var _global_icons_social_media_LinkedinIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../global/icons/social-media/LinkedinIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/LinkedinIcon.js\");\n/* harmony import */ var _global_icons_social_media_InstagramIcon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../global/icons/social-media/InstagramIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/InstagramIcon.js\");\n/* harmony import */ var _global_icons_social_media_FacebookIcon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../global/icons/social-media/FacebookIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/FacebookIcon.js\");\n/* harmony import */ var _global_icons_social_media_YoutubeIcon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../global/icons/social-media/YoutubeIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/YoutubeIcon.js\");\n/* harmony import */ var _global_icons_social_media_PinterestIcon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../global/icons/social-media/PinterestIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/PinterestIcon.js\");\n/* harmony import */ var _global_icons_social_media_TwitterIcon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../global/icons/social-media/TwitterIcon */ \"./packages/twentytwenty-theme/src/components/global/icons/social-media/TwitterIcon.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var ProfileCard=(_ref)=>{var{state,actions,libraries,name,image,profession,location,description,button,facebook,instagram,twitter,youtube,linkedin,pinterest}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;var MobileImageStyles={backgroundImage:\"url(\".concat(image.sizes.thumbnail,\")\")};return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Profile,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(MainColumn,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(ProfileInner,null,image&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(MobileImage,{style:MobileImageStyles}),name&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Name,null,name),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Border,null),profession&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Profession,null,profession),location&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Location,null,location),description&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Description,null,description),button&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(ButtonContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Button,{link:button.url,target:button.target},button.title)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(SocialMediaLinks,null,facebook&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:facebook,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_FacebookIcon__WEBPACK_IMPORTED_MODULE_8__[\"default\"],null)),instagram&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:instagram,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_InstagramIcon__WEBPACK_IMPORTED_MODULE_7__[\"default\"],null)),pinterest&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:pinterest,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_PinterestIcon__WEBPACK_IMPORTED_MODULE_10__[\"default\"],null)),youtube&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:youtube,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_YoutubeIcon__WEBPACK_IMPORTED_MODULE_9__[\"default\"],null)),twitter&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:twitter,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_TwitterIcon__WEBPACK_IMPORTED_MODULE_11__[\"default\"],null)),linkedin&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(AuthorSocialMediaLink,{href:linkedin,target:\"_blank\",rel:\"noopener noreferrer\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_global_icons_social_media_LinkedinIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null))))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(ProfileImageColumn,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(ProfileImage,{src:image.sizes.medium})))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(ProfileCard));var Profile=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh20\",label:\"Profile\"})({\"display\":\"flex\",\"alignItems\":\"center\",\"height\":_tailwindConfig.theme.height[\"auto\"],\"flexWrap\":\"wrap\",\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],\"marginTop\":_tailwindConfig.theme.margin[\"32\"],\"marginBottom\":_tailwindConfig.theme.margin[\"32\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var MainColumn=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh21\",label:\"MainColumn\"})(Object.assign({\"width\":_tailwindConfig.theme.width[\"full\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"width\":_tailwindConfig.theme.width[\"3/5\"],\"borderTopLeftRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"borderBottomLeftRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"borderTopRightRadius\":_tailwindConfig.theme.borderRadius[\"none\"],\"borderBottomRightRadius\":_tailwindConfig.theme.borderRadius[\"none\"],\"marginLeft\":_tailwindConfig.theme.margin[\"0\"],\"marginRight\":_tailwindConfig.theme.margin[\"0\"]},\"borderRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"boxShadow\":_tailwindConfig.theme.boxShadow[\"2xl\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"white\"),{\"opacity\":_tailwindConfig.theme.opacity[\"75\"],\"marginLeft\":_tailwindConfig.theme.margin[\"6\"],\"marginRight\":_tailwindConfig.theme.margin[\"6\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ProfileInner=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh22\",label:\"ProfileInner\"})({\"padding\":_tailwindConfig.theme.padding[\"4\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"md\")]:{\"padding\":_tailwindConfig.theme.padding[\"12\"]},\"textAlign\":\"center\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"textAlign\":\"left\"}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var MobileImage=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh23\",label:\"MobileImage\"})(Object.assign({\"display\":\"block\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"display\":\"none\"},\"borderRadius\":_tailwindConfig.theme.borderRadius[\"full\"],\"boxShadow\":_tailwindConfig.theme.boxShadow[\"xl\"],\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],\"marginTop\":_tailwindConfig.theme.margin[\"-16\"],\"height\":_tailwindConfig.theme.height[\"48\"],\"width\":_tailwindConfig.theme.width[\"48\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"cover\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"top\")), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Name=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h1',{target:\"e1h58hh24\",label:\"Name\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"6xl\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"bold\"),{\"paddingTop\":_tailwindConfig.theme.padding[\"8\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"paddingTop\":_tailwindConfig.theme.padding[\"0\"]}}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Border=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh25\",label:\"Border\"})(Object.assign({\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],\"borderBottomWidth\":_tailwindConfig.theme.borderWidth[\"2\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"borderWidth\",\"config\":\"borderWidth\"},{\"prop\":\"borderColor\",\"config\":\"borderColor\"}],\"teal-500\"),{\"borderStyle\":\"solid\",\"opacity\":_tailwindConfig.theme.opacity[\"25\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Profession=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('p',{target:\"e1h58hh26\",label:\"Profession\"})(Object.assign({\"paddingTop\":_tailwindConfig.theme.padding[\"4\"],\"margin\":_tailwindConfig.theme.margin[\"0\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"3xl\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"bold\"),{\"display\":\"flex\",\"alignItems\":\"center\",\"justifyContent\":\"center\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"justifyContent\":\"flex-start\"}}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Location=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('p',{target:\"e1h58hh27\",label:\"Location\"})(Object.assign({\"paddingTop\":_tailwindConfig.theme.padding[\"2\"],\"margin\":_tailwindConfig.theme.margin[\"0\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-600\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"2xl\"),{\"display\":\"flex\",\"alignItems\":\"center\",\"justifyContent\":\"center\",[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"justifyContent\":\"flex-start\"}}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Description=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('p',{target:\"e1h58hh28\",label:\"Description\"})(Object.assign({\"paddingTop\":_tailwindConfig.theme.padding[\"8\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"2xl\")), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ButtonContainer=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh29\",label:\"ButtonContainer\"})({\"paddingTop\":_tailwindConfig.theme.padding[\"10\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"10\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Button=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{target:\"e1h58hh210\",label:\"Button\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"teal-700\"),{\":hover\":Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"teal-900\"))},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"white\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"bold\"),{\"paddingTop\":_tailwindConfig.theme.padding[\"6\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"6\"],\"paddingLeft\":_tailwindConfig.theme.padding[\"6\"],\"paddingRight\":_tailwindConfig.theme.padding[\"6\"],\"borderRadius\":_tailwindConfig.theme.borderRadius[\"full\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var SocialMediaLinks=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh211\",label:\"SocialMediaLinks\"})({\"marginTop\":_tailwindConfig.theme.margin[\"6\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"16\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"paddingBottom\":_tailwindConfig.theme.padding[\"0\"],\"width\":_tailwindConfig.theme.width[\"full\"]},\"width\":_tailwindConfig.theme.width[\"4/5\"],\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],\"display\":\"flex\",\"flexWrap\":\"wrap\",\"alignItems\":\"center\",\"justifyContent\":\"space-between\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var AuthorSocialMediaLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('a',{target:\"e1h58hh212\",label:\"AuthorSocialMediaLink\"})({\"paddingLeft\":_tailwindConfig.theme.padding[\"1\"],\"paddingRight\":_tailwindConfig.theme.padding[\"1\"]}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ProfileImageColumn=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1h58hh213\",label:\"ProfileImageColumn\"})({\"width\":_tailwindConfig.theme.width[\"full\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"width\":_tailwindConfig.theme.width[\"2/5\"]}}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var ProfileImage=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('img',{target:\"e1h58hh214\",label:\"ProfileImage\"})({\"borderRadius\":_tailwindConfig.theme.borderRadius[\"none\"],[tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.stringifyScreen(_tailwindConfig,\"lg\")]:{\"borderRadius\":_tailwindConfig.theme.borderRadius[\"lg\"],\"display\":\"block\"},\"boxShadow\":_tailwindConfig.theme.boxShadow[\"2xl\"],\"display\":\"none\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/ProfileCard.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/Text.js":
/*!*****************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/Text.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var Text=(_ref)=>{var{state,actions,libraries,title,text}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Container,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Title,null,title),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(TextContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Html2React,{html:text}))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Text));var Container=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1vacah70\",label:\"Container\"})(Object.assign({\"marginLeft\":_tailwindConfig.theme.margin[\"auto\"],\"marginRight\":_tailwindConfig.theme.margin[\"auto\"],\"padding\":_tailwindConfig.theme.padding[\"10\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"backgroundColor\",\"config\":\"backgroundColor\"},{\"prop\":\"backgroundSize\",\"config\":\"backgroundSize\"},{\"prop\":\"backgroundPosition\",\"config\":\"backgroundPosition\"}],\"white\"),{\"boxShadow\":_tailwindConfig.theme.boxShadow[\"xl\"]}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1RleHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0MrQiIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9UZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcblxuXG5jb25zdCBUZXh0ID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZSwgdGV4dH0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG5cbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgPFRpdGxlPnt0aXRsZX08L1RpdGxlPlxuICAgICAgICAgICAgPFRleHRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17dGV4dH0vPlxuICAgICAgICAgICAgPC9UZXh0Q29udGFpbmVyPlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVGV4dCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BteC1hdXRvIHAtMTAgYmctd2hpdGUgc2hhZG93LXhsYH1gO1xuY29uc3QgVGl0bGUgPSBzdHlsZWQoJ2gyJylgICR7dHdgdGV4dC1ncmF5LTgwMCBmb250LW5vcm1hbCBweC0yIHVwcGVyY2FzZSB0ZXh0LWNlbnRlcmB9YDtcbmNvbnN0IFRleHRDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpYCAke3R3YG0tYXV0byBpdGVtcy1jZW50ZXJgfWA7XG5cblxuXG5cblxuXG5cblxuXG4iXX0= */\");var Title=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h2',{target:\"e1vacah71\",label:\"Title\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-800\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"normal\"),{\"paddingLeft\":_tailwindConfig.theme.padding[\"2\"],\"paddingRight\":_tailwindConfig.theme.padding[\"2\"],\"textTransform\":\"uppercase\",\"textAlign\":\"center\"}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1RleHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUMwQiIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9UZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcblxuXG5jb25zdCBUZXh0ID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZSwgdGV4dH0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG5cbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgPFRpdGxlPnt0aXRsZX08L1RpdGxlPlxuICAgICAgICAgICAgPFRleHRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17dGV4dH0vPlxuICAgICAgICAgICAgPC9UZXh0Q29udGFpbmVyPlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVGV4dCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BteC1hdXRvIHAtMTAgYmctd2hpdGUgc2hhZG93LXhsYH1gO1xuY29uc3QgVGl0bGUgPSBzdHlsZWQoJ2gyJylgICR7dHdgdGV4dC1ncmF5LTgwMCBmb250LW5vcm1hbCBweC0yIHVwcGVyY2FzZSB0ZXh0LWNlbnRlcmB9YDtcbmNvbnN0IFRleHRDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpYCAke3R3YG0tYXV0byBpdGVtcy1jZW50ZXJgfWA7XG5cblxuXG5cblxuXG5cblxuXG4iXX0= */\");var TextContainer=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('div',{target:\"e1vacah72\",label:\"TextContainer\"})({\"margin\":_tailwindConfig.theme.margin[\"auto\"],\"alignItems\":\"center\"}, false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1RleHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENtQyIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9UZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcblxuXG5jb25zdCBUZXh0ID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZSwgdGV4dH0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG5cbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgICAgPFRpdGxlPnt0aXRsZX08L1RpdGxlPlxuICAgICAgICAgICAgPFRleHRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17dGV4dH0vPlxuICAgICAgICAgICAgPC9UZXh0Q29udGFpbmVyPlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVGV4dCk7XG5cblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BteC1hdXRvIHAtMTAgYmctd2hpdGUgc2hhZG93LXhsYH1gO1xuY29uc3QgVGl0bGUgPSBzdHlsZWQoJ2gyJylgICR7dHdgdGV4dC1ncmF5LTgwMCBmb250LW5vcm1hbCBweC0yIHVwcGVyY2FzZSB0ZXh0LWNlbnRlcmB9YDtcbmNvbnN0IFRleHRDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpYCAke3R3YG0tYXV0byBpdGVtcy1jZW50ZXJgfWA7XG5cblxuXG5cblxuXG5cblxuXG4iXX0= */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9UZXh0LmpzPzhlMTIiXSwibmFtZXMiOlsiVGV4dCIsInN0YXRlIiwiYWN0aW9ucyIsImxpYnJhcmllcyIsInRpdGxlIiwidGV4dCIsInVzZUVmZmVjdCIsInNvdXJjZSIsImZldGNoIiwicm91dGVyIiwibGluayIsImRhdGEiLCJnZXQiLCJwYWdlIiwidHlwZSIsImlkIiwiSHRtbDJSZWFjdCIsImh0bWwycmVhY3QiLCJDb21wb25lbnQiLCJpc1JlYWR5IiwiY29ubmVjdCIsIkNvbnRhaW5lciIsIl90YWlsd2luZENvbmZpZyIsInRoZW1lIiwibWFyZ2luIiwicGFkZGluZyIsIl90YWlsd2luZFV0aWxzIiwicmVzb2x2ZVN0eWxlIiwiYm94U2hhZG93IiwiVGl0bGUiLCJUZXh0Q29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztpS0FLQSxHQUFNQSxLQUFJLENBQUcsUUFBOEMsSUFBN0MsQ0FBQ0MsS0FBRCxDQUFRQyxPQUFSLENBQWlCQyxTQUFqQixDQUE0QkMsS0FBNUIsQ0FBbUNDLElBQW5DLENBQTZDLE1BRXZEO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsT0FDSUMsdURBQVMsQ0FBQyxJQUFNLENBQ1pKLE9BQU8sQ0FBQ0ssTUFBUixDQUFlQyxLQUFmLENBQXFCUCxLQUFLLENBQUNRLE1BQU4sQ0FBYUMsSUFBbEMsRUFDSCxDQUZRLENBRU4sRUFGTSxDQUFULENBSUE7QUFDQSxHQUFNQyxLQUFJLENBQUdWLEtBQUssQ0FBQ00sTUFBTixDQUFhSyxHQUFiLENBQWlCWCxLQUFLLENBQUNRLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUNBO0FBQ0EsR0FBTUcsS0FBSSxDQUFHWixLQUFLLENBQUNNLE1BQU4sQ0FBYUksSUFBSSxDQUFDRyxJQUFsQixFQUF3QkgsSUFBSSxDQUFDSSxFQUE3QixDQUFiLENBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFNQyxXQUFVLENBQUdiLFNBQVMsQ0FBQ2MsVUFBVixDQUFxQkMsU0FBeEMsQ0FHQSxNQUFPUCxLQUFJLENBQUNRLE9BQUwsQ0FDSCwwREFBQyxTQUFELE1BQ0ksMERBQUMsS0FBRCxNQUFRZixLQUFSLENBREosQ0FFSSwwREFBQyxhQUFELE1BQ0ksMERBQUMsVUFBRCxFQUFZLElBQUksQ0FBRUMsSUFBbEIsRUFESixDQUZKLENBREcsQ0FPSCxJQVBKLENBUUgsQ0E5QkQsQ0FnQ2VlLHVIQUFPLENBQUNwQixJQUFELENBQXRCLEVBR0EsR0FBTXFCLFVBQVMsQ0FBRyxrRkFBTyxLQUFQLHdDQUFILENBQXNCLDRCQXhDckNDLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCLE1BQTdCLENBd0NxQyxlQXhDckNGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCLE1BQTdCLENBd0NxQyxXQXhDckNGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JFLE9BQXRCLENBQThCLElBQTlCLENBd0NxQyxFQXhDckNDLGtFQUFjLENBQUNDLFlBQWYsQ0FBNEJMLGVBQTVCLENBQTZDLENBQUMsQ0FBQyxPQUFPLGlCQUFSLENBQTBCLFNBQVMsaUJBQW5DLENBQUQsQ0FBdUQsQ0FBQyxPQUFPLGdCQUFSLENBQXlCLFNBQVMsZ0JBQWxDLENBQXZELENBQTJHLENBQUMsT0FBTyxvQkFBUixDQUE2QixTQUFTLG9CQUF0QyxDQUEzRyxDQUE3QyxDQUFxTixPQUFyTixDQXdDcUMsY0F4Q3JDQSxlQUFlLENBQUNDLEtBQWhCLENBQXNCSyxTQUF0QixDQUFnQyxJQUFoQyxDQXdDcUMsRUFBdEIsbzNFQUFmLENBQ0EsR0FBTUMsTUFBSyxDQUFHLGtGQUFPLElBQVAsb0NBQUgsQ0FBcUIsY0F6Q2hDSCxrRUFBYyxDQUFDQyxZQUFmLENBQTRCTCxlQUE1QixDQUE2QyxDQUFDLENBQUMsT0FBTyxPQUFSLENBQWdCLFNBQVMsV0FBekIsQ0FBRCxDQUF1QyxDQUFDLE9BQU8sVUFBUixDQUFtQixTQUFTLFVBQTVCLENBQXZDLENBQTdDLENBQTZILFVBQTdILENBeUNnQyxDQXpDaENJLGtFQUFjLENBQUNDLFlBQWYsQ0FBNEJMLGVBQTVCLENBQTZDLENBQUMsQ0FBQyxPQUFPLFlBQVIsQ0FBcUIsU0FBUyxZQUE5QixDQUFELENBQTZDLENBQUMsT0FBTyxZQUFSLENBQXFCLFNBQVMsWUFBOUIsQ0FBN0MsQ0FBN0MsQ0FBdUksUUFBdkksQ0F5Q2dDLGdCQXpDaENBLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JFLE9BQXRCLENBQThCLEdBQTlCLENBeUNnQyxnQkF6Q2hDSCxlQUFlLENBQUNDLEtBQWhCLENBQXNCRSxPQUF0QixDQUE4QixHQUE5QixDQXlDZ0MsbURBQXJCLG8zRUFBWCxDQUNBLEdBQU1LLGNBQWEsQ0FBRyxrRkFBTyxLQUFQLDRDQUFILENBQXNCLFVBMUN6Q1IsZUFBZSxDQUFDQyxLQUFoQixDQUFzQkMsTUFBdEIsQ0FBNkIsTUFBN0IsQ0EwQ3lDLHVCQUF0QixvM0VBQW5CIiwiZmlsZSI6Ii4vcGFja2FnZXMvdHdlbnR5dHdlbnR5LXRoZW1lL3NyYy9jb21wb25lbnRzL3BhZ2UvYWNmL0NvbnRlbnQvVGV4dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3R5bGVkLCBjb25uZWN0fSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwge3VzZUVmZmVjdH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgdHcgZnJvbSBcInRhaWx3aW5kLm1hY3JvXCI7XG5cblxuY29uc3QgVGV4dCA9ICh7c3RhdGUsIGFjdGlvbnMsIGxpYnJhcmllcywgdGl0bGUsIHRleHR9KSA9PiB7XG5cbiAgICAvKipcbiAgICAgKiBPbmNlIHRoZSBwb3N0IGhhcyBsb2FkZWQgaW4gdGhlIERPTSwgcHJlZmV0Y2ggYm90aCB0aGVcbiAgICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgICAqL1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFjdGlvbnMuc291cmNlLmZldGNoKHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICB9LCBbXSk7XG5cbiAgICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgYXV0aG9yLlxuICAgIC8vIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAgIC8vIEdldCBhIGh1bWFuIHJlYWRhYmxlIGRhdGUuXG4gICAgLy8gY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBvc3QuZGF0ZSk7XG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcblxuXG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICAgIDxUaXRsZT57dGl0bGV9PC9UaXRsZT5cbiAgICAgICAgICAgIDxUZXh0Q29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9e3RleHR9Lz5cbiAgICAgICAgICAgIDwvVGV4dENvbnRhaW5lcj5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgKSA6IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRleHQpO1xuXG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZCgnZGl2JylgICR7dHdgbXgtYXV0byBwLTEwIGJnLXdoaXRlIHNoYWRvdy14bGB9YDtcbmNvbnN0IFRpdGxlID0gc3R5bGVkKCdoMicpYCAke3R3YHRleHQtZ3JheS04MDAgZm9udC1ub3JtYWwgcHgtMiB1cHBlcmNhc2UgdGV4dC1jZW50ZXJgfWA7XG5jb25zdCBUZXh0Q29udGFpbmVyID0gc3R5bGVkKCdkaXYnKWAgJHt0d2BtLWF1dG8gaXRlbXMtY2VudGVyYH1gO1xuXG5cblxuXG5cblxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/Text.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/acf/Content/Title.js":
/*!******************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/acf/Content/Title.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var Title=(_ref)=>{var{state,actions,libraries,title}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(TitleH1,null,title)):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Title));var TitleH1=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h1',{target:\"ezxe1et0\",label:\"TitleH1\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-800\"),tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"medium\"),{\"paddingLeft\":_tailwindConfig.theme.padding[\"2\"],\"paddingRight\":_tailwindConfig.theme.padding[\"2\"]},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"7xl\"),{\"textAlign\":\"center\"}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2FjZi9Db250ZW50L1RpdGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9DNEIiLCJmaWxlIjoiL1VzZXJzL2RlamFuZ2VvcmdpZXYvQ29kZS9ydXRoZ2VvcmdpZXYtZnJvbnRpdHkvcGFja2FnZXMvdHdlbnR5dHdlbnR5LXRoZW1lL3NyYy9jb21wb25lbnRzL3BhZ2UvYWNmL0NvbnRlbnQvVGl0bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N0eWxlZCwgY29ubmVjdH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHt1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0YWlsd2luZC5tYWNyb1wiO1xuXG5cbmNvbnN0IFRpdGxlID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZX0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG5cbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPFRpdGxlSDE+e3RpdGxlfTwvVGl0bGVIMT5cbiAgICAgICAgPC9kaXY+XG4gICAgKSA6IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRpdGxlKTtcblxuY29uc3QgVGl0bGVIMSA9IHN0eWxlZCgnaDEnKWAgJHt0d2B0ZXh0LWdyYXktODAwIGZvbnQtbWVkaXVtIHB4LTIgdGV4dC03eGwgdGV4dC1jZW50ZXJgfWA7XG5cblxuXG5cblxuXG5cblxuXG5cbiJdfQ== */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9hY2YvQ29udGVudC9UaXRsZS5qcz9mMDc3Il0sIm5hbWVzIjpbIlRpdGxlIiwic3RhdGUiLCJhY3Rpb25zIiwibGlicmFyaWVzIiwidGl0bGUiLCJ1c2VFZmZlY3QiLCJzb3VyY2UiLCJmZXRjaCIsInJvdXRlciIsImxpbmsiLCJkYXRhIiwiZ2V0IiwicGFnZSIsInR5cGUiLCJpZCIsIkh0bWwyUmVhY3QiLCJodG1sMnJlYWN0IiwiQ29tcG9uZW50IiwiaXNSZWFkeSIsImNvbm5lY3QiLCJUaXRsZUgxIiwiX3RhaWx3aW5kVXRpbHMiLCJyZXNvbHZlU3R5bGUiLCJfdGFpbHdpbmRDb25maWciLCJ0aGVtZSIsInBhZGRpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O2lLQUtBLEdBQU1BLE1BQUssQ0FBRyxRQUF3QyxJQUF2QyxDQUFDQyxLQUFELENBQVFDLE9BQVIsQ0FBaUJDLFNBQWpCLENBQTRCQyxLQUE1QixDQUF1QyxNQUVsRDtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0lDLHVEQUFTLENBQUMsSUFBTSxDQUNaSCxPQUFPLENBQUNJLE1BQVIsQ0FBZUMsS0FBZixDQUFxQk4sS0FBSyxDQUFDTyxNQUFOLENBQWFDLElBQWxDLEVBQ0gsQ0FGUSxDQUVOLEVBRk0sQ0FBVCxDQUlBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHVCxLQUFLLENBQUNLLE1BQU4sQ0FBYUssR0FBYixDQUFpQlYsS0FBSyxDQUFDTyxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1HLEtBQUksQ0FBR1gsS0FBSyxDQUFDSyxNQUFOLENBQWFJLElBQUksQ0FBQ0csSUFBbEIsRUFBd0JILElBQUksQ0FBQ0ksRUFBN0IsQ0FBYixDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBTUMsV0FBVSxDQUFHWixTQUFTLENBQUNhLFVBQVYsQ0FBcUJDLFNBQXhDLENBR0EsTUFBT1AsS0FBSSxDQUFDUSxPQUFMLENBQ0gscUVBQ0ksMERBQUMsT0FBRCxNQUFVZCxLQUFWLENBREosQ0FERyxDQUlILElBSkosQ0FLSCxDQTNCRCxDQTZCZWUsdUhBQU8sQ0FBQ25CLEtBQUQsQ0FBdEIsRUFFQSxHQUFNb0IsUUFBTyxDQUFHLGtGQUFPLElBQVAscUNBQUgsQ0FBcUIsY0FwQ2xDQyxrRUFBYyxDQUFDQyxZQUFmLENBQTRCQyxlQUE1QixDQUE2QyxDQUFDLENBQUMsT0FBTyxPQUFSLENBQWdCLFNBQVMsV0FBekIsQ0FBRCxDQUF1QyxDQUFDLE9BQU8sVUFBUixDQUFtQixTQUFTLFVBQTVCLENBQXZDLENBQTdDLENBQTZILFVBQTdILENBb0NrQyxDQXBDbENGLGtFQUFjLENBQUNDLFlBQWYsQ0FBNEJDLGVBQTVCLENBQTZDLENBQUMsQ0FBQyxPQUFPLFlBQVIsQ0FBcUIsU0FBUyxZQUE5QixDQUFELENBQTZDLENBQUMsT0FBTyxZQUFSLENBQXFCLFNBQVMsWUFBOUIsQ0FBN0MsQ0FBN0MsQ0FBdUksUUFBdkksQ0FvQ2tDLGdCQXBDbENBLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE9BQXRCLENBQThCLEdBQTlCLENBb0NrQyxnQkFwQ2xDRixlQUFlLENBQUNDLEtBQWhCLENBQXNCQyxPQUF0QixDQUE4QixHQUE5QixDQW9Da0MsRUFwQ2xDSixrRUFBYyxDQUFDQyxZQUFmLENBQTRCQyxlQUE1QixDQUE2QyxDQUFDLENBQUMsT0FBTyxPQUFSLENBQWdCLFNBQVMsV0FBekIsQ0FBRCxDQUF1QyxDQUFDLE9BQU8sVUFBUixDQUFtQixTQUFTLFVBQTVCLENBQXZDLENBQTdDLENBQTZILEtBQTdILENBb0NrQyx3QkFBckIsb2lFQUFiIiwiZmlsZSI6Ii4vcGFja2FnZXMvdHdlbnR5dHdlbnR5LXRoZW1lL3NyYy9jb21wb25lbnRzL3BhZ2UvYWNmL0NvbnRlbnQvVGl0bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N0eWxlZCwgY29ubmVjdH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHt1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0YWlsd2luZC5tYWNyb1wiO1xuXG5cbmNvbnN0IFRpdGxlID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZX0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG5cbiAgICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPFRpdGxlSDE+e3RpdGxlfTwvVGl0bGVIMT5cbiAgICAgICAgPC9kaXY+XG4gICAgKSA6IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRpdGxlKTtcblxuY29uc3QgVGl0bGVIMSA9IHN0eWxlZCgnaDEnKWAgJHt0d2B0ZXh0LWdyYXktODAwIGZvbnQtbWVkaXVtIHB4LTIgdGV4dC03eGwgdGV4dC1jZW50ZXJgfWA7XG5cblxuXG5cblxuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/acf/Content/Title.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/global/SectionTitle.js":
/*!********************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/global/SectionTitle.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind.macro/utils.umd.js */ \"./node_modules/tailwind.macro/utils.umd.js\");\n/* harmony import */ var tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../../../tailwind.config.js */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nvar _tailwindConfig=tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveConfig(_tailwind_config_js__WEBPACK_IMPORTED_MODULE_2___default.a);var SectionTitle=(_ref)=>{var{state,actions,libraries,title}=_ref;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(()=>{actions.source.fetch(state.router.link);},[]);// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the data of the author.\n// const author = state.source.author[post.author];\n// Get a human readable date.\n// const date = new Date(post.date);\nvar Html2React=libraries.html2react.Component;return data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Title,null,title):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(SectionTitle));var Title=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('h2',{target:\"evb82kj0\",label:\"Title\"})(Object.assign(tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"color\",\"config\":\"textColor\"},{\"prop\":\"fontSize\",\"config\":\"fontSize\"}],\"gray-800\"),{\"textAlign\":\"center\"},tailwind_macro_utils_umd_js__WEBPACK_IMPORTED_MODULE_1___default.a.resolveStyle(_tailwindConfig,[{\"prop\":\"fontWeight\",\"config\":\"fontWeight\"},{\"prop\":\"fontFamily\",\"config\":\"fontFamily\"}],\"normal\"),{\"paddingTop\":_tailwindConfig.theme.padding[\"6\"],\"paddingBottom\":_tailwindConfig.theme.padding[\"6\"],\"paddingLeft\":_tailwindConfig.theme.padding[\"2\"],\"paddingRight\":_tailwindConfig.theme.padding[\"2\"],\"textTransform\":\"uppercase\"}), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWphbmdlb3JnaWV2L0NvZGUvcnV0aGdlb3JnaWV2LWZyb250aXR5L3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2dsb2JhbC9TZWN0aW9uVGl0bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0MwQiIsImZpbGUiOiIvVXNlcnMvZGVqYW5nZW9yZ2lldi9Db2RlL3J1dGhnZW9yZ2lldi1mcm9udGl0eS9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9nbG9iYWwvU2VjdGlvblRpdGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzdHlsZWQsIGNvbm5lY3R9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0fSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB0dyBmcm9tIFwidGFpbHdpbmQubWFjcm9cIjtcblxuY29uc3QgU2VjdGlvblRpdGxlID0gKHtzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzLCB0aXRsZX0pID0+IHtcblxuICAgIC8qKlxuICAgICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICAgKiB0aGUgaG9tZSBwYWdlLCBldmVyeXRoaW5nIGlzIHJlYWR5IGFuZCBpdCBsb2FkcyBpbnN0YW50bHkuXG4gICAgICovXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goc3RhdGUucm91dGVyLmxpbmspO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAgIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gICAgLy8gY29uc3QgYXV0aG9yID0gc3RhdGUuc291cmNlLmF1dGhvcltwb3N0LmF1dGhvcl07XG4gICAgLy8gR2V0IGEgaHVtYW4gcmVhZGFibGUgZGF0ZS5cbiAgICAvLyBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcblxuICAgIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cblxuICAgIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgICAgIDxUaXRsZT57dGl0bGV9PC9UaXRsZT5cbiAgICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2VjdGlvblRpdGxlKTtcblxuY29uc3QgVGl0bGUgPSBzdHlsZWQoJ2gyJylgICR7dHdgdGV4dC1ncmF5LTgwMCB0ZXh0LWNlbnRlciBmb250LW5vcm1hbCBweS02IHB4LTIgdXBwZXJjYXNlYH1gO1xuXG5cblxuXG4iXX0= */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy90d2VudHl0d2VudHktdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZS9nbG9iYWwvU2VjdGlvblRpdGxlLmpzP2YyMzIiXSwibmFtZXMiOlsiU2VjdGlvblRpdGxlIiwic3RhdGUiLCJhY3Rpb25zIiwibGlicmFyaWVzIiwidGl0bGUiLCJ1c2VFZmZlY3QiLCJzb3VyY2UiLCJmZXRjaCIsInJvdXRlciIsImxpbmsiLCJkYXRhIiwiZ2V0IiwicGFnZSIsInR5cGUiLCJpZCIsIkh0bWwyUmVhY3QiLCJodG1sMnJlYWN0IiwiQ29tcG9uZW50IiwiaXNSZWFkeSIsImNvbm5lY3QiLCJUaXRsZSIsIl90YWlsd2luZFV0aWxzIiwicmVzb2x2ZVN0eWxlIiwiX3RhaWx3aW5kQ29uZmlnIiwidGhlbWUiLCJwYWRkaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztpS0FJQSxHQUFNQSxhQUFZLENBQUcsUUFBd0MsSUFBdkMsQ0FBQ0MsS0FBRCxDQUFRQyxPQUFSLENBQWlCQyxTQUFqQixDQUE0QkMsS0FBNUIsQ0FBdUMsTUFFekQ7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUNJQyx1REFBUyxDQUFDLElBQU0sQ0FDWkgsT0FBTyxDQUFDSSxNQUFSLENBQWVDLEtBQWYsQ0FBcUJOLEtBQUssQ0FBQ08sTUFBTixDQUFhQyxJQUFsQyxFQUNILENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQTtBQUNBLEdBQU1DLEtBQUksQ0FBR1QsS0FBSyxDQUFDSyxNQUFOLENBQWFLLEdBQWIsQ0FBaUJWLEtBQUssQ0FBQ08sTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0E7QUFDQSxHQUFNRyxLQUFJLENBQUdYLEtBQUssQ0FBQ0ssTUFBTixDQUFhSSxJQUFJLENBQUNHLElBQWxCLEVBQXdCSCxJQUFJLENBQUNJLEVBQTdCLENBQWIsQ0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLEdBQU1DLFdBQVUsQ0FBR1osU0FBUyxDQUFDYSxVQUFWLENBQXFCQyxTQUF4QyxDQUdBLE1BQU9QLEtBQUksQ0FBQ1EsT0FBTCxDQUNILDBEQUFDLEtBQUQsTUFBUWQsS0FBUixDQURHLENBRUgsSUFGSixDQUdILENBMUJELENBNEJlZSx1SEFBTyxDQUFDbkIsWUFBRCxDQUF0QixFQUVBLEdBQU1vQixNQUFLLENBQUcsa0ZBQU8sSUFBUCxtQ0FBSCxDQUFxQixjQWxDaENDLGtFQUFjLENBQUNDLFlBQWYsQ0FBNEJDLGVBQTVCLENBQTZDLENBQUMsQ0FBQyxPQUFPLE9BQVIsQ0FBZ0IsU0FBUyxXQUF6QixDQUFELENBQXVDLENBQUMsT0FBTyxVQUFSLENBQW1CLFNBQVMsVUFBNUIsQ0FBdkMsQ0FBN0MsQ0FBNkgsVUFBN0gsQ0FrQ2dDLHdCQWxDaENGLGtFQUFjLENBQUNDLFlBQWYsQ0FBNEJDLGVBQTVCLENBQTZDLENBQUMsQ0FBQyxPQUFPLFlBQVIsQ0FBcUIsU0FBUyxZQUE5QixDQUFELENBQTZDLENBQUMsT0FBTyxZQUFSLENBQXFCLFNBQVMsWUFBOUIsQ0FBN0MsQ0FBN0MsQ0FBdUksUUFBdkksQ0FrQ2dDLGVBbENoQ0EsZUFBZSxDQUFDQyxLQUFoQixDQUFzQkMsT0FBdEIsQ0FBOEIsR0FBOUIsQ0FrQ2dDLGlCQWxDaENGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE9BQXRCLENBQThCLEdBQTlCLENBa0NnQyxlQWxDaENGLGVBQWUsQ0FBQ0MsS0FBaEIsQ0FBc0JDLE9BQXRCLENBQThCLEdBQTlCLENBa0NnQyxnQkFsQ2hDRixlQUFlLENBQUNDLEtBQWhCLENBQXNCQyxPQUF0QixDQUE4QixHQUE5QixDQWtDZ0MsOEJBQXJCLDQvREFBWCIsImZpbGUiOiIuL3BhY2thZ2VzL3R3ZW50eXR3ZW50eS10aGVtZS9zcmMvY29tcG9uZW50cy9wYWdlL2dsb2JhbC9TZWN0aW9uVGl0bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3N0eWxlZCwgY29ubmVjdH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHt1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHR3IGZyb20gXCJ0YWlsd2luZC5tYWNyb1wiO1xuXG5jb25zdCBTZWN0aW9uVGl0bGUgPSAoe3N0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMsIHRpdGxlfSkgPT4ge1xuXG4gICAgLyoqXG4gICAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAgICogaG9tZSBwb3N0cyBhbmQgdGhlIGxpc3QgY29tcG9uZW50IHNvIGlmIHRoZSB1c2VyIHZpc2l0c1xuICAgICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICAgKi9cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgfSwgW10pO1xuXG4gICAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gICAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBwb3N0LlxuICAgIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGF1dGhvci5cbiAgICAvLyBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW3Bvc3QuYXV0aG9yXTtcbiAgICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICAgIC8vIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShwb3N0LmRhdGUpO1xuXG4gICAgY29uc3QgSHRtbDJSZWFjdCA9IGxpYnJhcmllcy5odG1sMnJlYWN0LkNvbXBvbmVudDtcblxuXG4gICAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICAgICAgPFRpdGxlPnt0aXRsZX08L1RpdGxlPlxuICAgICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChTZWN0aW9uVGl0bGUpO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZCgnaDInKWAgJHt0d2B0ZXh0LWdyYXktODAwIHRleHQtY2VudGVyIGZvbnQtbm9ybWFsIHB5LTYgcHgtMiB1cHBlcmNhc2VgfWA7XG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/global/SectionTitle.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/components/page/page.js":
/*!*****************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/page/page.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _post_featured_media__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../post/featured-media */ \"./packages/twentytwenty-theme/src/components/post/featured-media.js\");\n/* harmony import */ var _acf_Content_Carousel_PageCarousel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./acf/Content/Carousel/PageCarousel */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/Carousel/PageCarousel.js\");\n/* harmony import */ var _acf_Content_Text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./acf/Content/Text */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/Text.js\");\n/* harmony import */ var _acf_Content_Card__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./acf/Content/Card */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/Card.js\");\n/* harmony import */ var _acf_Content_HighlightedLink__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./acf/Content/HighlightedLink */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/HighlightedLink.js\");\n/* harmony import */ var _acf_Content_ProfileCard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./acf/Content/ProfileCard */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/ProfileCard.js\");\n/* harmony import */ var _acf_Content_InstaFeed__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./acf/Content/InstaFeed */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/InstaFeed.js\");\n/* harmony import */ var _acf_Content_Title__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./acf/Content/Title */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/Title.js\");\n/* harmony import */ var _acf_Content_PinterestWidget__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./acf/Content/PinterestWidget */ \"./packages/twentytwenty-theme/src/components/page/acf/Content/PinterestWidget.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var Page=(_ref)=>{var{state,actions,libraries}=_ref;// Get information about the current URL.\nvar data=state.source.get(state.router.link);// Get the data of the post.\nvar page=state.source[data.type][data.id];// Get the html2react component.\nvar Html2React=libraries.html2react.Component;/**\n     * Once the post has loaded in the DOM, prefetch both the\n     * home posts and the list component so if the user visits\n     * the home page, everything is ready and it loads instantly.\n     */Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(()=>{actions.source.fetch(\"/\");},[]);var pageContent=page.acf['contentfieldgroup.content'];// Load the post, but only if the data is ready.\nreturn data.isReady?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(\"div\",null,page.featured_media!==0&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(FeaturedImage,{id:page.featured_media}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(SectionContainer,null,Object.keys(pageContent).map(function(key,i){if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.carousel'){var Carousel=pageContent[key]['contentfieldgroup.content.carousel.item'];return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_Carousel_PageCarousel__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{key:i,id:page.id,carousel:Carousel});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.image'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(\"h1\",{key:key},\"IMAGE\");}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.accordion'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(\"h1\",{key:key},\"Accordion\");}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.text'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_Text__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{key:key,title:pageContent[key]['contentfieldgroup.content.text.title'],text:pageContent[key]['contentfieldgroup.content.text.text']});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.card'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_Card__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{key:key,name:pageContent[key]['contentfieldgroup.content.card.name'],description:pageContent[key]['contentfieldgroup.content.card.description'],highlightedText:pageContent[key]['contentfieldgroup.content.card.highlighted_text'],imageID:pageContent[key]['contentfieldgroup.content.card.image'].ID,url:pageContent[key]['contentfieldgroup.content.card.url']});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.highlightedlink'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_HighlightedLink__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{key:key,target:pageContent[key]['contentfieldgroup.content.highlightedlink.link'].target,title:pageContent[key]['contentfieldgroup.content.highlightedlink.link'].title,url:pageContent[key]['contentfieldgroup.content.highlightedlink.link'].url});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.profile'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_ProfileCard__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{key:key,name:pageContent[key]['contentfieldgroup.content.profile.name'],image:pageContent[key]['contentfieldgroup.content.profile.image'],profession:pageContent[key]['contentfieldgroup.content.profile.profession'],location:pageContent[key]['contentfieldgroup.content.profile.location'],description:pageContent[key]['contentfieldgroup.content.profile.description'],button:pageContent[key]['contentfieldgroup.content.profile.button'],facebook:pageContent[key]['contentfieldgroup.content.profile.facebook'],instagram:pageContent[key]['contentfieldgroup.content.profile.instagram'],twitter:pageContent[key]['contentfieldgroup.content.profile.twitter'],youtube:pageContent[key]['contentfieldgroup.content.profile.youtube'],linkedin:pageContent[key]['contentfieldgroup.content.profile.linkedin'],pinterest:pageContent[key]['contentfieldgroup.content.profile.pinterest']});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.instafeed'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_InstaFeed__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{key:key,title:pageContent[key]['contentfieldgroup.content.instafeed.title'],posts:pageContent[key]['contentfieldgroup.content.instafeed.posts']});}if(pageContent[key].acf_fc_layout==='contentfieldgroup.content.title'){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(_acf_Content_Title__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{key:key,title:pageContent[key]['contentfieldgroup.content.title.title']});}}),page.content&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(PostInner,{size:\"medium\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(EntryContent,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_12__[\"jsx\"])(Html2React,{html:page.content.rendered}))))):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Page));var maxWidths={thin:\"58rem\",small:\"80rem\",medium:\"100rem\",large:\"120rem\"};var getMaxWidth=props=>maxWidths[props.size]||maxWidths[\"large\"];var FeaturedImage=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_post_featured_media__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{target:\"e1bse76g0\",label:\"FeaturedImage\"})( false?undefined:{name:\"6a6nzn\",styles:\"margin-top:0 !important;position:relative;> div{position:relative;}&:before{background:#fff;content:\\\"\\\";display:block;position:absolute;bottom:50%;left:0;right:0;top:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var SectionContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1bse76g1\",label:\"SectionContainer\"})(\"margin-left:auto;margin-right:auto;width:calc(100% - 4rem);max-width:\",getMaxWidth,\";@media (min-width:700px){width:calc(100% - 8rem);}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var PostInner=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SectionContainer,{target:\"e1bse76g2\",label:\"PostInner\"})( false?undefined:{name:\"l5pbim\",styles:\"padding-top:5rem;@media (min-width:700px){padding-top:8rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var EntryContent=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1bse76g3\",label:\"EntryContent\"})( false?undefined:{name:\"7728s5\",styles:\"line-height:1.5;letter-spacing:normal;@media (min-width:700px){font-size:2.1rem;}> *:first-of-type{margin-top:0;}figure{margin:2em 0;max-width:100%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/page/page.js\n");

/***/ })

}]);